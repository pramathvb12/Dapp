{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"aution.sol\":{\"content\":\"pragma solidity ^0.4.26;\\r\\ncontract Auction {\\r\\n    \\r\\n    // Data\\r\\n    //Structure to hold details of the item\\r\\n    struct Item {\\r\\n        uint itemId; // id of the item\\r\\n        uint[] itemTokens;  //tokens bid in favor of the item\\r\\n       \\r\\n    }\\r\\n    \\r\\n   //Structure to hold the details of a persons\\r\\n    struct Person {\\r\\n        uint remainingTokens; // tokens remaining with bidder\\r\\n        uint personId; // it serves as tokenId as well\\r\\n        address addr;//address of the bidder\\r\\n    }\\r\\n \\r\\n    mapping(address => Person) tokenDetails; //address to person \\r\\n    Person [4] bidders;//Array containing 4 person objects\\r\\n    \\r\\n    Item [3] public items;//Array containing 3 item objects\\r\\n    address[3] public winners;//Array for address of winners\\r\\n    address public beneficiary;//owner of the smart contract\\r\\n    \\r\\n    uint bidderCount=0;//counter\\r\\n    \\r\\n    //functions\\r\\n\\r\\n    function Auction() public payable{    //constructor\\r\\n                \\r\\n        //Part 1 Task 1. Initialize beneficiary with address of smart contractâ€™s owner\\r\\n        //Hint. In the constructor,\\\"msg.sender\\\" is the address of the owner.\\r\\n        // ** Start code here. 1 line approximately. **/\\r\\n        beneficiary=msg.sender;\\r\\n\\r\\n          //** End code here. **/\\r\\n        uint[] memory emptyArray;\\r\\n        items[0] = Item({itemId:0,itemTokens:emptyArray});\\r\\n        \\r\\n        //Part 1 Task 2. Initialize two items with at index 1 and 2. \\r\\n        // ** Start code here. 2 lines approximately. **/\\r\\n        items[1] =  Item({itemId:1,itemTokens:emptyArray});\\r\\n        items[2] =Item({itemId:2,itemTokens:emptyArray});\\r\\n        //** End code here**/\\r\\n    }\\r\\n    \\r\\n\\r\\n    function register() public payable{\\r\\n        \\r\\n        \\r\\n        bidders[bidderCount].personId = bidderCount;\\r\\n        \\r\\n        //Part 1 Task 3. Initialize the address of the bidder \\r\\n        /*Hint. Here the bidders[bidderCount].addr should be initialized with address of the registrant.*/\\r\\n\\r\\n        // ** Start code here. 1 line approximately. **/\\r\\n\\r\\n        //** End code here. **\\r\\n        bidders[bidderCount].addr=msg.sender;\\r\\n        \\r\\n        bidders[bidderCount].remainingTokens = 5; // only 5 tokens\\r\\n        tokenDetails[msg.sender]=bidders[bidderCount];\\r\\n        bidderCount++;\\r\\n    }\\r\\n    \\r\\n    function bid(uint _itemId, uint _count) public payable{\\r\\n        /*\\r\\n            Bids tokens to a particular item.\\r\\n            Arguments:\\r\\n            _itemId -- uint, id of the item\\r\\n            _count -- uint, count of tokens to bid for the item\\r\\n        */\\r\\n        \\r\\n        /*\\r\\n        Part 1 Task 4. Implement the three conditions below.\\r\\n            4.1 If the number of tokens remaining with the bidder is < count of tokens bidded, revert.\\r\\n            4.2 If there are no tokens remaining with the bidder, revert.\\r\\n            4.3 If the id of the item for which bid is placed, is greater than 2, revert.\\r\\n\\r\\n        Hint: \\\"tokenDetails[msg.sender].remainingTokens\\\" gives the details of the number of tokens remaining with the bidder.\\r\\n        */\\r\\n        \\r\\n        // ** Start code here. 2 lines approximately. **/\\r\\n    \\r\\n\\r\\n        //** End code here. **\\r\\n        if (tokenDetails[msg.sender].remainingTokens < _count || tokenDetails[msg.sender].remainingTokens == 0) {\\r\\n            revert();\\r\\n            \\r\\n        }    \\r\\n        if (_itemId > 2) {\\r\\n            revert();\\r\\n            \\r\\n        }  \\r\\n        \\r\\n        /*Part 1 Task 5. Decrement the remainingTokens by the number of tokens bid and store the value in balance variable.\\r\\n        Hint. \\\"tokenDetails[msg.sender].remainingTokens\\\" should be decremented by \\\"_count\\\". */\\r\\n \\r\\n        // ** Start code here. 1 line approximately. **\\r\\n        uint balance=tokenDetails[msg.sender].remainingTokens - _count;\\r\\n        //** End code here. **\\r\\n        \\r\\n        tokenDetails[msg.sender].remainingTokens=balance;\\r\\n        bidders[tokenDetails[msg.sender].personId].remainingTokens=balance;//updating the same balance in bidders map.\\r\\n        \\r\\n        Item storage bidItem = items[_itemId];\\r\\n        for(uint i=0; i<_count;i++) {\\r\\n            bidItem.itemTokens.push(tokenDetails[msg.sender].personId);    \\r\\n        }\\r\\n    }\\r\\n    \\r\\n    // Part 2 Task 1. Create a modifier named \\\"onlyOwner\\\" to ensure that only owner is allowed to reveal winners\\r\\n    //Hint : Use require to validate if \\\"msg.sender\\\" is equal to the \\\"beneficiary\\\".\\r\\n    modifier onlyOwner {\\r\\n        // ** Start code here. 2 lines approximately. **\\r\\n        \\r\\n        _;\\r\\n        //** End code here. **\\r\\nrequire(beneficiary == msg.sender);\\r\\n    }\\r\\n    \\r\\n    \\r\\n    function revealWinners() public onlyOwner{\\r\\n        \\r\\n        /* \\r\\n            Iterate over all the items present in the auction.\\r\\n            If at least on person has placed a bid, randomly select          the winner */\\r\\n\\r\\n        for (uint id = 0; id < 3; id++) {\\r\\n            Item storage currentItem=items[id];\\r\\n            if(currentItem.itemTokens.length != 0){\\r\\n            // generate random# from block number \\r\\n            uint randomIndex = (block.number / currentItem.itemTokens.length)% currentItem.itemTokens.length; \\r\\n            // Obtain the winning tokenId\\r\\n\\r\\n            uint winnerId = currentItem.itemTokens[randomIndex];\\r\\n                \\r\\n            /* Part 1 Task 6. Assign the winners.\\r\\n            Hint.\\\" bidders[winnerId] \\\" will give you the person object with the winnerId.\\r\\n            you need to assign the address of the person obtained above to winners[id] */\\r\\n\\r\\n            // ** Start coding here *** 1 line approximately.\\r\\n            \\r\\n                    \\r\\n            //** end code here*\\r\\n              winners[id] = bidders[winnerId].addr;  \\r\\n            }\\r\\n        }\\r\\n    } \\r\\n\\r\\n  //Miscellaneous methods: Below methods are used to assist Grading. Please DONOT CHANGE THEM.\\r\\n    function getPersonDetails(uint id) public constant returns(uint,uint,address){\\r\\n        return (bidders[id].remainingTokens,bidders[id].personId,bidders[id].addr);\\r\\n    }\\r\\n\\r\\n}\\r\\n\"}},\"settings\":{\"optimizer\":{\"enabled\":false,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}}}}",
	"name": "Auction",
	"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"},{\"name\":\"_count\",\"type\":\"uint256\"}],\"name\":\"bid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getPersonDetails\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"revealWinners\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"name\":\"itemId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"aution.sol\":\"Auction\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"aution.sol\":{\"keccak256\":\"0xc384c2c2ee7acaf8882d51fca1c885263c9f07858802a34879005b3957697b28\",\"urls\":[\"bzzr://5f0af15f4aa25b7d8451fa362b78b028674fc65550b407a21eaff19877f6fc6c\"]}},\"version\":1}",
	"bytecode": {
		"linkReferences": {},
		"object": "60806040526000601755606033601660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408051908101604052806000815260200182815250600d600060038110151561007257fe5b6002020160008201518160000155602082015181600101908051906020019061009c92919061014e565b5090505060408051908101604052806001815260200182815250600d60016003811015156100c657fe5b600202016000820151816000015560208201518160010190805190602001906100f092919061014e565b5090505060408051908101604052806002815260200182815250600d600260038110151561011a57fe5b6002020160008201518160000155602082015181600101908051906020019061014492919061014e565b50905050506101c0565b82805482825590600052602060002090810192821561018a579160200282015b8281111561018957825182559160200191906001019061016e565b5b509050610197919061019b565b5090565b6101bd91905b808211156101b95760008160009055506001016101a1565b5090565b90565b61089b806101cf6000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631aa3a0081461008857806338af3eed14610092578063598647f8146100e95780636098170514610113578063952587d61461018e578063a2fb1175146101a5578063bfb231d214610212575b600080fd5b610090610253565b005b34801561009e57600080fd5b506100a76103cc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61011160048036038101908080359060200190929190803590602001909291905050506103f2565b005b34801561011f57600080fd5b5061013e6004803603810190808035906020019092919050505061062c565b604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390f35b34801561019a57600080fd5b506101a36106a3565b005b3480156101b157600080fd5b506101d060048036038101908080359060200190929190505050610817565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021e57600080fd5b5061023d6004803603810190808035906020019092919050505061084c565b6040518082815260200191505060405180910390f35b601754600160175460048110151561026757fe5b600302016001018190555033600160175460048110151561028457fe5b6003020160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560016017546004811015156102dc57fe5b600302016000018190555060016017546004811015156102f857fe5b600302016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201548160000155600182015481600101556002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050601760008154809291906001019190505550565b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000836000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541080610487575060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154145b1561049157600080fd5b600285111561049f57600080fd5b836000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154039250826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508260016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460048110151561057c57fe5b6003020160000181905550600d8560038110151561059657fe5b600202019150600090505b8381101561062557816001016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154908060018154018082558091505090600182039060005260206000200160009091929091909150555080806001019150506105a1565b5050505050565b600080600060018460048110151561064057fe5b600302016000015460018560048110151561065757fe5b600302016001015460018660048110151561066e57fe5b6003020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250925092509193909250565b600080600080600093505b60038410156107b557600d846003811015156106c657fe5b600202019250600083600101805490501415156107a85782600101805490508360010180549050438115156106f757fe5b0481151561070157fe5b069150826001018281548110151561071557fe5b9060005260206000200154905060018160048110151561073157fe5b6003020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660138560038110151561076857fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b83806001019450506106ae565b3373ffffffffffffffffffffffffffffffffffffffff16601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561081157600080fd5b50505050565b60138160038110151561082657fe5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d8160038110151561085b57fe5b6002020160009150905080600001549050815600a165627a7a72305820449e03360d3e95b0529247e5dacdcbc8230f5bac7ef4d023142ac5d14a3491da0029",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x17 SSTORE PUSH1 0x60 CALLER PUSH1 0x16 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x72 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x9C SWAP3 SWAP2 SWAP1 PUSH2 0x14E JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x1 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0xC6 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xF0 SWAP3 SWAP2 SWAP1 PUSH2 0x14E JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x2 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x11A JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x144 SWAP3 SWAP2 SWAP1 PUSH2 0x14E JUMP JUMPDEST POP SWAP1 POP POP POP PUSH2 0x1C0 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x18A JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x189 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x16E JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x19B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1BD SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1A1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x89B DUP1 PUSH2 0x1CF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x598647F8 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x60981705 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x952587D6 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xA2FB1175 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xBFB231D2 EQ PUSH2 0x212 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH2 0x253 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x62C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0x6A3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x17 SLOAD PUSH1 0x1 PUSH1 0x17 SLOAD PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x267 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x17 SLOAD PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x284 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x1 PUSH1 0x17 SLOAD PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x2DC JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x17 SLOAD PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x2F8 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x17 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT DUP1 PUSH2 0x487 JUMPI POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP6 GT ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB SWAP3 POP DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x57C JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xD DUP6 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x596 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x625 JUMPI DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5A1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x640 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD PUSH1 0x1 DUP6 PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x657 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x1 DUP7 PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x66E JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP4 POP JUMPDEST PUSH1 0x3 DUP5 LT ISZERO PUSH2 0x7B5 JUMPI PUSH1 0xD DUP5 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x6C6 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SWAP3 POP PUSH1 0x0 DUP4 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP EQ ISZERO ISZERO PUSH2 0x7A8 JUMPI DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP NUMBER DUP2 ISZERO ISZERO PUSH2 0x6F7 JUMPI INVALID JUMPDEST DIV DUP2 ISZERO ISZERO PUSH2 0x701 JUMPI INVALID JUMPDEST MOD SWAP2 POP DUP3 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x715 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x731 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x13 DUP6 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x768 JUMPI INVALID JUMPDEST ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP POP PUSH2 0x6AE JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x13 DUP2 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x826 JUMPI INVALID JUMPDEST ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD DUP2 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x85B JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DIFFICULTY SWAP15 SUB CALLDATASIZE 0xd RETURNDATACOPY SWAP6 0xb0 MSTORE SWAP3 0x47 0xe5 0xda 0xcd 0xcb 0xc8 0x23 0xf JUMPDEST 0xac PUSH31 0xF4D023142AC5D14A3491DA0029000000000000000000000000000000000000 ",
		"sourceMap": "26:5928:0:-;;;844:1;827:18;;1261:24;1203:10;1191:11;;:22;;;;;;;;;;;;;;;;;;1307:38;;;;;;;;;1320:1;1307:38;;;;1333:10;1307:38;;;1296:5;1302:1;1296:8;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1508:38;;;;;;;;;1521:1;1508:38;;;;1534:10;1508:38;;;1496:5;1502:1;1496:8;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1567:38;;;;;;;;;1580:1;1567:38;;;;1593:10;1567:38;;;1557:5;1563:1;1557:8;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;886:758;26:5928;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
	},
	"abi": [
		{
			"constant": false,
			"inputs": [],
			"name": "register",
			"outputs": [],
			"payable": true,
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "beneficiary",
			"outputs": [
				{
					"name": "",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"name": "_itemId",
					"type": "uint256"
				},
				{
					"name": "_count",
					"type": "uint256"
				}
			],
			"name": "bid",
			"outputs": [],
			"payable": true,
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "id",
					"type": "uint256"
				}
			],
			"name": "getPersonDetails",
			"outputs": [
				{
					"name": "",
					"type": "uint256"
				},
				{
					"name": "",
					"type": "uint256"
				},
				{
					"name": "",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [],
			"name": "revealWinners",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "",
					"type": "uint256"
				}
			],
			"name": "winners",
			"outputs": [
				{
					"name": "",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"name": "",
					"type": "uint256"
				}
			],
			"name": "items",
			"outputs": [
				{
					"name": "itemId",
					"type": "uint256"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"payable": true,
			"stateMutability": "payable",
			"type": "constructor"
		}
	],
	"web3Deploy": "var auctionContract = new web3.eth.Contract([{\"constant\":false,\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_itemId\",\"type\":\"uint256\"},{\"name\":\"_count\",\"type\":\"uint256\"}],\"name\":\"bid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getPersonDetails\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"revealWinners\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"name\":\"itemId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}]);\nvar auction = auctionContract.deploy({\n     data: '0x60806040526000601755606033601660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408051908101604052806000815260200182815250600d600060038110151561007257fe5b6002020160008201518160000155602082015181600101908051906020019061009c92919061014e565b5090505060408051908101604052806001815260200182815250600d60016003811015156100c657fe5b600202016000820151816000015560208201518160010190805190602001906100f092919061014e565b5090505060408051908101604052806002815260200182815250600d600260038110151561011a57fe5b6002020160008201518160000155602082015181600101908051906020019061014492919061014e565b50905050506101c0565b82805482825590600052602060002090810192821561018a579160200282015b8281111561018957825182559160200191906001019061016e565b5b509050610197919061019b565b5090565b6101bd91905b808211156101b95760008160009055506001016101a1565b5090565b90565b61089b806101cf6000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631aa3a0081461008857806338af3eed14610092578063598647f8146100e95780636098170514610113578063952587d61461018e578063a2fb1175146101a5578063bfb231d214610212575b600080fd5b610090610253565b005b34801561009e57600080fd5b506100a76103cc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61011160048036038101908080359060200190929190803590602001909291905050506103f2565b005b34801561011f57600080fd5b5061013e6004803603810190808035906020019092919050505061062c565b604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390f35b34801561019a57600080fd5b506101a36106a3565b005b3480156101b157600080fd5b506101d060048036038101908080359060200190929190505050610817565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021e57600080fd5b5061023d6004803603810190808035906020019092919050505061084c565b6040518082815260200191505060405180910390f35b601754600160175460048110151561026757fe5b600302016001018190555033600160175460048110151561028457fe5b6003020160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560016017546004811015156102dc57fe5b600302016000018190555060016017546004811015156102f857fe5b600302016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201548160000155600182015481600101556002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050601760008154809291906001019190505550565b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000836000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541080610487575060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154145b1561049157600080fd5b600285111561049f57600080fd5b836000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154039250826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508260016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460048110151561057c57fe5b6003020160000181905550600d8560038110151561059657fe5b600202019150600090505b8381101561062557816001016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154908060018154018082558091505090600182039060005260206000200160009091929091909150555080806001019150506105a1565b5050505050565b600080600060018460048110151561064057fe5b600302016000015460018560048110151561065757fe5b600302016001015460018660048110151561066e57fe5b6003020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250925092509193909250565b600080600080600093505b60038410156107b557600d846003811015156106c657fe5b600202019250600083600101805490501415156107a85782600101805490508360010180549050438115156106f757fe5b0481151561070157fe5b069150826001018281548110151561071557fe5b9060005260206000200154905060018160048110151561073157fe5b6003020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660138560038110151561076857fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b83806001019450506106ae565b3373ffffffffffffffffffffffffffffffffffffffff16601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561081157600080fd5b50505050565b60138160038110151561082657fe5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d8160038110151561085b57fe5b6002020160009150905080600001549050815600a165627a7a72305820449e03360d3e95b0529247e5dacdcbc8230f5bac7ef4d023142ac5d14a3491da0029', \n     arguments: [\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"metadataHash": "449e03360d3e95b0529247e5dacdcbc8230f5bac7ef4d023142ac5d14a3491da",
	"swarmLocation": "bzzr://449e03360d3e95b0529247e5dacdcbc8230f5bac7ef4d023142ac5d14a3491da",
	"functionHashes": {
		"60981705": "getPersonDetails(uint256)",
		"38af3eed": "beneficiary()",
		"598647f8": "bid(uint256,uint256)",
		"bfb231d2": "items(uint256)",
		"1aa3a008": "register()",
		"952587d6": "revealWinners()",
		"a2fb1175": "winners(uint256)"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "440600",
			"executionCost": "infinite",
			"totalCost": "infinite"
		},
		"External": {
			"beneficiary()": "464",
			"bid(uint256,uint256)": "infinite",
			"getPersonDetails(uint256)": "1192",
			"items(uint256)": "652",
			"register()": "142883",
			"revealWinners()": "infinite",
			"winners(uint256)": "645"
		}
	},
	"devdoc": {
		"methods": {}
	},
	"userdoc": {
		"methods": {}
	},
	"Runtime Bytecode": {
		"linkReferences": {},
		"object": "608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631aa3a0081461008857806338af3eed14610092578063598647f8146100e95780636098170514610113578063952587d61461018e578063a2fb1175146101a5578063bfb231d214610212575b600080fd5b610090610253565b005b34801561009e57600080fd5b506100a76103cc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61011160048036038101908080359060200190929190803590602001909291905050506103f2565b005b34801561011f57600080fd5b5061013e6004803603810190808035906020019092919050505061062c565b604051808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390f35b34801561019a57600080fd5b506101a36106a3565b005b3480156101b157600080fd5b506101d060048036038101908080359060200190929190505050610817565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021e57600080fd5b5061023d6004803603810190808035906020019092919050505061084c565b6040518082815260200191505060405180910390f35b601754600160175460048110151561026757fe5b600302016001018190555033600160175460048110151561028457fe5b6003020160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560016017546004811015156102dc57fe5b600302016000018190555060016017546004811015156102f857fe5b600302016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201548160000155600182015481600101556002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050601760008154809291906001019190505550565b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000836000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541080610487575060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154145b1561049157600080fd5b600285111561049f57600080fd5b836000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154039250826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508260016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460048110151561057c57fe5b6003020160000181905550600d8560038110151561059657fe5b600202019150600090505b8381101561062557816001016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154908060018154018082558091505090600182039060005260206000200160009091929091909150555080806001019150506105a1565b5050505050565b600080600060018460048110151561064057fe5b600302016000015460018560048110151561065757fe5b600302016001015460018660048110151561066e57fe5b6003020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250925092509193909250565b600080600080600093505b60038410156107b557600d846003811015156106c657fe5b600202019250600083600101805490501415156107a85782600101805490508360010180549050438115156106f757fe5b0481151561070157fe5b069150826001018281548110151561071557fe5b9060005260206000200154905060018160048110151561073157fe5b6003020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660138560038110151561076857fe5b0160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b83806001019450506106ae565b3373ffffffffffffffffffffffffffffffffffffffff16601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561081157600080fd5b50505050565b60138160038110151561082657fe5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d8160038110151561085b57fe5b6002020160009150905080600001549050815600a165627a7a72305820449e03360d3e95b0529247e5dacdcbc8230f5bac7ef4d023142ac5d14a3491da0029",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x598647F8 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x60981705 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x952587D6 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xA2FB1175 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xBFB231D2 EQ PUSH2 0x212 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH2 0x253 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x62C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3 PUSH2 0x6A3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x17 SLOAD PUSH1 0x1 PUSH1 0x17 SLOAD PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x267 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x17 SLOAD PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x284 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x1 PUSH1 0x17 SLOAD PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x2DC JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x17 SLOAD PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x2F8 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x17 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT DUP1 PUSH2 0x487 JUMPI POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP6 GT ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SUB SWAP3 POP DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x57C JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xD DUP6 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x596 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x625 JUMPI DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5A1 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x640 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x0 ADD SLOAD PUSH1 0x1 DUP6 PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x657 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x1 DUP7 PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x66E JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP4 POP JUMPDEST PUSH1 0x3 DUP5 LT ISZERO PUSH2 0x7B5 JUMPI PUSH1 0xD DUP5 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x6C6 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SWAP3 POP PUSH1 0x0 DUP4 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP EQ ISZERO ISZERO PUSH2 0x7A8 JUMPI DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP NUMBER DUP2 ISZERO ISZERO PUSH2 0x6F7 JUMPI INVALID JUMPDEST DIV DUP2 ISZERO ISZERO PUSH2 0x701 JUMPI INVALID JUMPDEST MOD SWAP2 POP DUP3 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x715 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 LT ISZERO ISZERO PUSH2 0x731 JUMPI INVALID JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x13 DUP6 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x768 JUMPI INVALID JUMPDEST ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP POP PUSH2 0x6AE JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x13 DUP2 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x826 JUMPI INVALID JUMPDEST ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD DUP2 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x85B JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 DIFFICULTY SWAP15 SUB CALLDATASIZE 0xd RETURNDATACOPY SWAP6 0xb0 MSTORE SWAP3 0x47 0xe5 0xda 0xcd 0xcb 0xc8 0x23 0xf JUMPDEST 0xac PUSH31 0xF4D023142AC5D14A3491DA0029000000000000000000000000000000000000 ",
		"sourceMap": "26:5928:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1658:597;;;;;;759:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;759:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;2267:1886;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5779:170;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5779:170:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4558:1116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4558:1116:0;;;;;;697:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;697:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;636:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;636:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1658:597;1755:11;;1723:7;1731:11;;1723:20;;;;;;;;;;;;:29;;:43;;;;2079:10;2053:7;2061:11;;2053:20;;;;;;;;;;;;:25;;;:36;;;;;;;;;;;;;;;;;;2149:1;2110:7;2118:11;;2110:20;;;;;;;;;;;;:36;;:40;;;;2203:7;2211:11;;2203:20;;;;;;;;;;;;2178:12;:24;2191:10;2178:24;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2234:11;;:13;;;;;;;;;;;;;1658:597::o;759:26::-;;;;;;;;;;;;;:::o;2267:1886::-;3677:12;3981:20;4033:6;3188;3145:12;:24;3158:10;3145:24;;;;;;;;;;;;;;;:40;;;:49;:98;;;;3242:1;3198:12;:24;3211:10;3198:24;;;;;;;;;;;;;;;:40;;;:45;3145:98;3141:153;;;3260:8;;;3141:153;3322:1;3312:7;:11;3308:66;;;3340:8;;;3308:66;3733:6;3690:12;:24;3703:10;3690:24;;;;;;;;;;;;;;;:40;;;:49;3677:62;;3833:7;3792:12;:24;3805:10;3792:24;;;;;;;;;;;;;;;:40;;:48;;;;3910:7;3851;3859:12;:24;3872:10;3859:24;;;;;;;;;;;;;;;:33;;;3851:42;;;;;;;;;;;;:58;;:66;;;;4004:5;4010:7;4004:14;;;;;;;;;;;;3981:37;;4040:1;4033:8;;4029:117;4045:6;4043:1;:8;4029:117;;;4072:7;:18;;4096:12;:24;4109:10;4096:24;;;;;;;;;;;;;;;:33;;;4072:58;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4072:58:0;;;;;;;;;;;;;;;;;;;;;;4052:3;;;;;;;4029:117;;;2267:1886;;;;;:::o;5779:170::-;5838:4;5843;5848:7;5875;5883:2;5875:11;;;;;;;;;;;;:27;;;5903:7;5911:2;5903:11;;;;;;;;;;;;:20;;;5924:7;5932:2;5924:11;;;;;;;;;;;;:16;;;;;;;;;;;;5867:74;;;;;;5779:170;;;;;:::o;4558:1116::-;4796:7;4838:24;4992:16;5149:13;4806:1;4796:11;;4791:876;4814:1;4809:2;:6;4791:876;;;4863:5;4869:2;4863:9;;;;;;;;;;;;4838:34;;4923:1;4890:11;:22;;:29;;;;:34;;4887:769;;;5059:11;:22;;:29;;;;5027:11;:22;;:29;;;;5012:12;:44;;;;;;;;5011:77;;;;;;;;4992:96;;5165:11;:22;;5188:11;5165:35;;;;;;;;;;;;;;;;;;5149:51;;5616:7;5624:8;5616:17;;;;;;;;;;;;:22;;;;;;;;;;;;5602:7;5610:2;5602:11;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;4887:769;4817:4;;;;;;;4791:876;;;4521:10;4506:25;;:11;;;;;;;;;;;:25;;;4498:34;;;;;;;;4558:1116;;;;:::o;697:25::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;636:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
	},
	"Assembly": ".code\n  PUSH 80\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH 40\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  MSTORE \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH 0\t\t\t0\n  PUSH 17\t\t\tuint bidderCount=0\n  SSTORE \t\t\tuint bidderCount=0\n  PUSH 60\t\t\tnt[] memory emptyArray;\\r\n  CALLER \t\t\tg.sender;\\r\n  PUSH 16\t\t\tneficiary=m\n  PUSH 0\t\t\tneficiary=m\n  PUSH 100\t\t\tneficiary=msg.sender;\\r\n  EXP \t\t\tneficiary=msg.sender;\\r\n  DUP2 \t\t\tneficiary=msg.sender;\\r\n  SLOAD \t\t\tneficiary=msg.sender;\\r\n  DUP2 \t\t\tneficiary=msg.sender;\\r\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tneficiary=msg.sender;\\r\n  MUL \t\t\tneficiary=msg.sender;\\r\n  NOT \t\t\tneficiary=msg.sender;\\r\n  AND \t\t\tneficiary=msg.sender;\\r\n  SWAP1 \t\t\tneficiary=msg.sender;\\r\n  DUP4 \t\t\tneficiary=msg.sender;\\r\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tneficiary=msg.sender;\\r\n  AND \t\t\tneficiary=msg.sender;\\r\n  MUL \t\t\tneficiary=msg.sender;\\r\n  OR \t\t\tneficiary=msg.sender;\\r\n  SWAP1 \t\t\tneficiary=msg.sender;\\r\n  SSTORE \t\t\tneficiary=msg.sender;\\r\n  POP \t\t\tneficiary=msg.sender;\\r\n  PUSH 40\t\t\tem({itemId:0,itemTokens:emptyA...\n  DUP1 \t\t\tem({itemId:0,itemTokens:emptyA...\n  MLOAD \t\t\tem({itemId:0,itemTokens:emptyA...\n  SWAP1 \t\t\tem({itemId:0,itemTokens:emptyA...\n  DUP2 \t\t\tem({itemId:0,itemTokens:emptyA...\n  ADD \t\t\tem({itemId:0,itemTokens:emptyA...\n  PUSH 40\t\t\tem({itemId:0,itemTokens:emptyA...\n  MSTORE \t\t\tem({itemId:0,itemTokens:emptyA...\n  DUP1 \t\t\tem({itemId:0,itemTokens:emptyA...\n  PUSH 0\t\t\ti\n  DUP2 \t\t\tem({itemId:0,itemTokens:emptyA...\n  MSTORE \t\t\tem({itemId:0,itemTokens:emptyA...\n  PUSH 20\t\t\tem({itemId:0,itemTokens:emptyA...\n  ADD \t\t\tem({itemId:0,itemTokens:emptyA...\n  DUP3 \t\t\tptyArray})\n  DUP2 \t\t\tem({itemId:0,itemTokens:emptyA...\n  MSTORE \t\t\tem({itemId:0,itemTokens:emptyA...\n  POP \t\t\tem({itemId:0,itemTokens:emptyA...\n  PUSH D\t\t\tems[0\n  PUSH 0\t\t\t \n  PUSH 3\t\t\tems[0] =\n  DUP2 \t\t\tems[0] =\n  LT \t\t\tems[0] =\n  ISZERO \t\t\tems[0] =\n  ISZERO \t\t\tems[0] =\n  PUSH [tag] 3\t\t\tems[0] =\n  JUMPI \t\t\tems[0] =\n  INVALID \t\t\tems[0] =\ntag 3\t\t\tems[0] =\n  JUMPDEST \t\t\tems[0] =\n  PUSH 2\t\t\tems[0] =\n  MUL \t\t\tems[0] =\n  ADD \t\t\tems[0] =\n  PUSH 0\t\t\tems[0] = Item({itemId:0,itemTo...\n  DUP3 \t\t\tems[0] = Item({itemId:0,itemTo...\n  ADD \t\t\tems[0] = Item({itemId:0,itemTo...\n  MLOAD \t\t\tems[0] = Item({itemId:0,itemTo...\n  DUP2 \t\t\tems[0] = Item({itemId:0,itemTo...\n  PUSH 0\t\t\tems[0] = Item({itemId:0,itemTo...\n  ADD \t\t\tems[0] = Item({itemId:0,itemTo...\n  SSTORE \t\t\tems[0] = Item({itemId:0,itemTo...\n  PUSH 20\t\t\tems[0] = Item({itemId:0,itemTo...\n  DUP3 \t\t\tems[0] = Item({itemId:0,itemTo...\n  ADD \t\t\tems[0] = Item({itemId:0,itemTo...\n  MLOAD \t\t\tems[0] = Item({itemId:0,itemTo...\n  DUP2 \t\t\tems[0] = Item({itemId:0,itemTo...\n  PUSH 1\t\t\tems[0] = Item({itemId:0,itemTo...\n  ADD \t\t\tems[0] = Item({itemId:0,itemTo...\n  SWAP1 \t\t\tems[0] = Item({itemId:0,itemTo...\n  DUP1 \t\t\tems[0] = Item({itemId:0,itemTo...\n  MLOAD \t\t\tems[0] = Item({itemId:0,itemTo...\n  SWAP1 \t\t\tems[0] = Item({itemId:0,itemTo...\n  PUSH 20\t\t\tems[0] = Item({itemId:0,itemTo...\n  ADD \t\t\tems[0] = Item({itemId:0,itemTo...\n  SWAP1 \t\t\tems[0] = Item({itemId:0,itemTo...\n  PUSH [tag] 5\t\t\tems[0] = Item({itemId:0,itemTo...\n  SWAP3 \t\t\tems[0] = Item({itemId:0,itemTo...\n  SWAP2 \t\t\tems[0] = Item({itemId:0,itemTo...\n  SWAP1 \t\t\tems[0] = Item({itemId:0,itemTo...\n  PUSH [tag] 6\t\t\tems[0] = Item({itemId:0,itemTo...\n  JUMP [in]\t\t\tems[0] = Item({itemId:0,itemTo...\ntag 5\t\t\tems[0] = Item({itemId:0,itemTo...\n  JUMPDEST \t\t\tems[0] = Item({itemId:0,itemTo...\n  POP \t\t\tems[0] = Item({itemId:0,itemTo...\n  SWAP1 \t\t\tems[0] = Item({itemId:0,itemTo...\n  POP \t\t\tems[0] = Item({itemId:0,itemTo...\n  POP \t\t\tems[0] = Item({itemId:0,itemTo...\n  PUSH 40\t\t\tem({itemId:1,itemTokens:emptyA...\n  DUP1 \t\t\tem({itemId:1,itemTokens:emptyA...\n  MLOAD \t\t\tem({itemId:1,itemTokens:emptyA...\n  SWAP1 \t\t\tem({itemId:1,itemTokens:emptyA...\n  DUP2 \t\t\tem({itemId:1,itemTokens:emptyA...\n  ADD \t\t\tem({itemId:1,itemTokens:emptyA...\n  PUSH 40\t\t\tem({itemId:1,itemTokens:emptyA...\n  MSTORE \t\t\tem({itemId:1,itemTokens:emptyA...\n  DUP1 \t\t\tem({itemId:1,itemTokens:emptyA...\n  PUSH 1\t\t\ti\n  DUP2 \t\t\tem({itemId:1,itemTokens:emptyA...\n  MSTORE \t\t\tem({itemId:1,itemTokens:emptyA...\n  PUSH 20\t\t\tem({itemId:1,itemTokens:emptyA...\n  ADD \t\t\tem({itemId:1,itemTokens:emptyA...\n  DUP3 \t\t\tptyArray})\n  DUP2 \t\t\tem({itemId:1,itemTokens:emptyA...\n  MSTORE \t\t\tem({itemId:1,itemTokens:emptyA...\n  POP \t\t\tem({itemId:1,itemTokens:emptyA...\n  PUSH D\t\t\tems[1\n  PUSH 1\t\t\t \n  PUSH 3\t\t\tems[1] =\n  DUP2 \t\t\tems[1] =\n  LT \t\t\tems[1] =\n  ISZERO \t\t\tems[1] =\n  ISZERO \t\t\tems[1] =\n  PUSH [tag] 7\t\t\tems[1] =\n  JUMPI \t\t\tems[1] =\n  INVALID \t\t\tems[1] =\ntag 7\t\t\tems[1] =\n  JUMPDEST \t\t\tems[1] =\n  PUSH 2\t\t\tems[1] =\n  MUL \t\t\tems[1] =\n  ADD \t\t\tems[1] =\n  PUSH 0\t\t\tems[1] =  Item({itemId:1,itemT...\n  DUP3 \t\t\tems[1] =  Item({itemId:1,itemT...\n  ADD \t\t\tems[1] =  Item({itemId:1,itemT...\n  MLOAD \t\t\tems[1] =  Item({itemId:1,itemT...\n  DUP2 \t\t\tems[1] =  Item({itemId:1,itemT...\n  PUSH 0\t\t\tems[1] =  Item({itemId:1,itemT...\n  ADD \t\t\tems[1] =  Item({itemId:1,itemT...\n  SSTORE \t\t\tems[1] =  Item({itemId:1,itemT...\n  PUSH 20\t\t\tems[1] =  Item({itemId:1,itemT...\n  DUP3 \t\t\tems[1] =  Item({itemId:1,itemT...\n  ADD \t\t\tems[1] =  Item({itemId:1,itemT...\n  MLOAD \t\t\tems[1] =  Item({itemId:1,itemT...\n  DUP2 \t\t\tems[1] =  Item({itemId:1,itemT...\n  PUSH 1\t\t\tems[1] =  Item({itemId:1,itemT...\n  ADD \t\t\tems[1] =  Item({itemId:1,itemT...\n  SWAP1 \t\t\tems[1] =  Item({itemId:1,itemT...\n  DUP1 \t\t\tems[1] =  Item({itemId:1,itemT...\n  MLOAD \t\t\tems[1] =  Item({itemId:1,itemT...\n  SWAP1 \t\t\tems[1] =  Item({itemId:1,itemT...\n  PUSH 20\t\t\tems[1] =  Item({itemId:1,itemT...\n  ADD \t\t\tems[1] =  Item({itemId:1,itemT...\n  SWAP1 \t\t\tems[1] =  Item({itemId:1,itemT...\n  PUSH [tag] 9\t\t\tems[1] =  Item({itemId:1,itemT...\n  SWAP3 \t\t\tems[1] =  Item({itemId:1,itemT...\n  SWAP2 \t\t\tems[1] =  Item({itemId:1,itemT...\n  SWAP1 \t\t\tems[1] =  Item({itemId:1,itemT...\n  PUSH [tag] 6\t\t\tems[1] =  Item({itemId:1,itemT...\n  JUMP [in]\t\t\tems[1] =  Item({itemId:1,itemT...\ntag 9\t\t\tems[1] =  Item({itemId:1,itemT...\n  JUMPDEST \t\t\tems[1] =  Item({itemId:1,itemT...\n  POP \t\t\tems[1] =  Item({itemId:1,itemT...\n  SWAP1 \t\t\tems[1] =  Item({itemId:1,itemT...\n  POP \t\t\tems[1] =  Item({itemId:1,itemT...\n  POP \t\t\tems[1] =  Item({itemId:1,itemT...\n  PUSH 40\t\t\tem({itemId:2,itemTokens:emptyA...\n  DUP1 \t\t\tem({itemId:2,itemTokens:emptyA...\n  MLOAD \t\t\tem({itemId:2,itemTokens:emptyA...\n  SWAP1 \t\t\tem({itemId:2,itemTokens:emptyA...\n  DUP2 \t\t\tem({itemId:2,itemTokens:emptyA...\n  ADD \t\t\tem({itemId:2,itemTokens:emptyA...\n  PUSH 40\t\t\tem({itemId:2,itemTokens:emptyA...\n  MSTORE \t\t\tem({itemId:2,itemTokens:emptyA...\n  DUP1 \t\t\tem({itemId:2,itemTokens:emptyA...\n  PUSH 2\t\t\ti\n  DUP2 \t\t\tem({itemId:2,itemTokens:emptyA...\n  MSTORE \t\t\tem({itemId:2,itemTokens:emptyA...\n  PUSH 20\t\t\tem({itemId:2,itemTokens:emptyA...\n  ADD \t\t\tem({itemId:2,itemTokens:emptyA...\n  DUP3 \t\t\tptyArray})\n  DUP2 \t\t\tem({itemId:2,itemTokens:emptyA...\n  MSTORE \t\t\tem({itemId:2,itemTokens:emptyA...\n  POP \t\t\tem({itemId:2,itemTokens:emptyA...\n  PUSH D\t\t\tems[2\n  PUSH 2\t\t\t \n  PUSH 3\t\t\tems[2] =\n  DUP2 \t\t\tems[2] =\n  LT \t\t\tems[2] =\n  ISZERO \t\t\tems[2] =\n  ISZERO \t\t\tems[2] =\n  PUSH [tag] 10\t\t\tems[2] =\n  JUMPI \t\t\tems[2] =\n  INVALID \t\t\tems[2] =\ntag 10\t\t\tems[2] =\n  JUMPDEST \t\t\tems[2] =\n  PUSH 2\t\t\tems[2] =\n  MUL \t\t\tems[2] =\n  ADD \t\t\tems[2] =\n  PUSH 0\t\t\tems[2] =Item({itemId:2,itemTok...\n  DUP3 \t\t\tems[2] =Item({itemId:2,itemTok...\n  ADD \t\t\tems[2] =Item({itemId:2,itemTok...\n  MLOAD \t\t\tems[2] =Item({itemId:2,itemTok...\n  DUP2 \t\t\tems[2] =Item({itemId:2,itemTok...\n  PUSH 0\t\t\tems[2] =Item({itemId:2,itemTok...\n  ADD \t\t\tems[2] =Item({itemId:2,itemTok...\n  SSTORE \t\t\tems[2] =Item({itemId:2,itemTok...\n  PUSH 20\t\t\tems[2] =Item({itemId:2,itemTok...\n  DUP3 \t\t\tems[2] =Item({itemId:2,itemTok...\n  ADD \t\t\tems[2] =Item({itemId:2,itemTok...\n  MLOAD \t\t\tems[2] =Item({itemId:2,itemTok...\n  DUP2 \t\t\tems[2] =Item({itemId:2,itemTok...\n  PUSH 1\t\t\tems[2] =Item({itemId:2,itemTok...\n  ADD \t\t\tems[2] =Item({itemId:2,itemTok...\n  SWAP1 \t\t\tems[2] =Item({itemId:2,itemTok...\n  DUP1 \t\t\tems[2] =Item({itemId:2,itemTok...\n  MLOAD \t\t\tems[2] =Item({itemId:2,itemTok...\n  SWAP1 \t\t\tems[2] =Item({itemId:2,itemTok...\n  PUSH 20\t\t\tems[2] =Item({itemId:2,itemTok...\n  ADD \t\t\tems[2] =Item({itemId:2,itemTok...\n  SWAP1 \t\t\tems[2] =Item({itemId:2,itemTok...\n  PUSH [tag] 12\t\t\tems[2] =Item({itemId:2,itemTok...\n  SWAP3 \t\t\tems[2] =Item({itemId:2,itemTok...\n  SWAP2 \t\t\tems[2] =Item({itemId:2,itemTok...\n  SWAP1 \t\t\tems[2] =Item({itemId:2,itemTok...\n  PUSH [tag] 6\t\t\tems[2] =Item({itemId:2,itemTok...\n  JUMP [in]\t\t\tems[2] =Item({itemId:2,itemTok...\ntag 12\t\t\tems[2] =Item({itemId:2,itemTok...\n  JUMPDEST \t\t\tems[2] =Item({itemId:2,itemTok...\n  POP \t\t\tems[2] =Item({itemId:2,itemTok...\n  SWAP1 \t\t\tems[2] =Item({itemId:2,itemTok...\n  POP \t\t\tems[2] =Item({itemId:2,itemTok...\n  POP \t\t\tems[2] =Item({itemId:2,itemTok...\n  POP \t\t\tfunction Auction() public paya...\n  PUSH [tag] 13\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMP \t\t\tcontract Auction {\\r\\n    \\r\\n...\ntag 6\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMPDEST \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  DUP3 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  DUP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SLOAD \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  DUP3 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  DUP3 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SSTORE \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH 0\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  MSTORE \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH 20\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH 0\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  KECCAK256 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  DUP2 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  ADD \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP3 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  DUP3 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  ISZERO \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH [tag] 14\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMPI \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP2 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH 20\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  MUL \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  DUP3 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  ADD \t\t\tcontract Auction {\\r\\n    \\r\\n...\ntag 15\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMPDEST \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  DUP3 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  DUP2 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  GT \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  ISZERO \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH [tag] 16\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMPI \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  DUP3 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  MLOAD \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  DUP3 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SSTORE \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP2 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH 20\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  ADD \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP2 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH 1\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  ADD \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH [tag] 15\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMP \t\t\tcontract Auction {\\r\\n    \\r\\n...\ntag 16\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMPDEST \t\t\tcontract Auction {\\r\\n    \\r\\n...\ntag 14\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMPDEST \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  POP \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  POP \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH [tag] 17\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP2 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH [tag] 18\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMP [in]\t\t\tcontract Auction {\\r\\n    \\r\\n...\ntag 17\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMPDEST \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  POP \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMP [out]\t\t\tcontract Auction {\\r\\n    \\r\\n...\ntag 18\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMPDEST \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH [tag] 19\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP2 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\ntag 20\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMPDEST \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  DUP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  DUP3 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  GT \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  ISZERO \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH [tag] 21\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMPI \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH 0\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  DUP2 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH 0\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SSTORE \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  POP \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH 1\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  ADD \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH [tag] 20\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMP \t\t\tcontract Auction {\\r\\n    \\r\\n...\ntag 21\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMPDEST \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  POP \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMP \t\t\tcontract Auction {\\r\\n    \\r\\n...\ntag 19\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMPDEST \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  SWAP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMP [out]\t\t\tcontract Auction {\\r\\n    \\r\\n...\ntag 13\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  JUMPDEST \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  DUP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH 0\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  CODECOPY \t\t\tcontract Auction {\\r\\n    \\r\\n...\n  PUSH 0\t\t\tcontract Auction {\\r\\n    \\r\\n...\n  RETURN \t\t\tcontract Auction {\\r\\n    \\r\\n...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH 40\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      MSTORE \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH 4\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      CALLDATASIZE \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      LT \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH [tag] 1\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      JUMPI \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH 0\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      CALLDATALOAD \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH 100000000000000000000000000000000000000000000000000000000\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      SWAP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      DIV \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH FFFFFFFF\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      AND \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      DUP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH 1AA3A008\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      EQ \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH [tag] 2\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      JUMPI \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      DUP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH 38AF3EED\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      EQ \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH [tag] 3\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      JUMPI \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      DUP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH 598647F8\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      EQ \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH [tag] 4\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      JUMPI \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      DUP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH 60981705\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      EQ \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH [tag] 5\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      JUMPI \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      DUP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH 952587D6\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      EQ \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH [tag] 6\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      JUMPI \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      DUP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH A2FB1175\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      EQ \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH [tag] 7\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      JUMPI \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      DUP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH BFB231D2\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      EQ \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH [tag] 8\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      JUMPI \t\t\tcontract Auction {\\r\\n    \\r\\n...\n    tag 1\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      JUMPDEST \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      PUSH 0\t\t\tcontract Auction {\\r\\n    \\r\\n...\n      DUP1 \t\t\tcontract Auction {\\r\\n    \\r\\n...\n      REVERT \t\t\tcontract Auction {\\r\\n    \\r\\n...\n    tag 2\t\t\tnction register() public payab...\n      JUMPDEST \t\t\tnction register() public payab...\n      PUSH [tag] 9\t\t\tnction register() public payab...\n      PUSH [tag] 10\t\t\tnction register() public payab...\n      JUMP \t\t\tnction register() public payab...\n    tag 9\t\t\tnction register() public payab...\n      JUMPDEST \t\t\tnction register() public payab...\n      STOP \t\t\tnction register() public payab...\n    tag 3\t\t\taddress public beneficiary\n      JUMPDEST \t\t\taddress public beneficiary\n      CALLVALUE \t\t\taddress public beneficiary\n      DUP1 \t\t\tolidity ^\n      ISZERO \t\t\ta \n      PUSH [tag] 11\t\t\ta \n      JUMPI \t\t\ta \n      PUSH 0\t\t\tr\n      DUP1 \t\t\to\n      REVERT \t\t\t.26;\\r\\ncontra\n    tag 11\t\t\ta \n      JUMPDEST \t\t\ta \n      POP \t\t\taddress public beneficiary\n      PUSH [tag] 12\t\t\taddress public beneficiary\n      PUSH [tag] 13\t\t\taddress public beneficiary\n      JUMP \t\t\taddress public beneficiary\n    tag 12\t\t\taddress public beneficiary\n      JUMPDEST \t\t\taddress public beneficiary\n      PUSH 40\t\t\taddress public beneficiary\n      MLOAD \t\t\taddress public beneficiary\n      DUP1 \t\t\taddress public beneficiary\n      DUP3 \t\t\taddress public beneficiary\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\taddress public beneficiary\n      AND \t\t\taddress public beneficiary\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\taddress public beneficiary\n      AND \t\t\taddress public beneficiary\n      DUP2 \t\t\taddress public beneficiary\n      MSTORE \t\t\taddress public beneficiary\n      PUSH 20\t\t\taddress public beneficiary\n      ADD \t\t\taddress public beneficiary\n      SWAP2 \t\t\taddress public beneficiary\n      POP \t\t\taddress public beneficiary\n      POP \t\t\taddress public beneficiary\n      PUSH 40\t\t\taddress public beneficiary\n      MLOAD \t\t\taddress public beneficiary\n      DUP1 \t\t\taddress public beneficiary\n      SWAP2 \t\t\taddress public beneficiary\n      SUB \t\t\taddress public beneficiary\n      SWAP1 \t\t\taddress public beneficiary\n      RETURN \t\t\taddress public beneficiary\n    tag 4\t\t\tnction bid(uint _itemId, uint ...\n      JUMPDEST \t\t\tnction bid(uint _itemId, uint ...\n      PUSH [tag] 14\t\t\tnction bid(uint _itemId, uint ...\n      PUSH 4\t\t\tnction bid(uint _itemId, uint ...\n      DUP1 \t\t\tnction bid(uint _itemId, uint ...\n      CALLDATASIZE \t\t\tnction bid(uint _itemId, uint ...\n      SUB \t\t\tnction bid(uint _itemId, uint ...\n      DUP2 \t\t\tnction bid(uint _itemId, uint ...\n      ADD \t\t\tnction bid(uint _itemId, uint ...\n      SWAP1 \t\t\tnction bid(uint _itemId, uint ...\n      DUP1 \t\t\tnction bid(uint _itemId, uint ...\n      DUP1 \t\t\tnction bid(uint _itemId, uint ...\n      CALLDATALOAD \t\t\tnction bid(uint _itemId, uint ...\n      SWAP1 \t\t\tnction bid(uint _itemId, uint ...\n      PUSH 20\t\t\tnction bid(uint _itemId, uint ...\n      ADD \t\t\tnction bid(uint _itemId, uint ...\n      SWAP1 \t\t\tnction bid(uint _itemId, uint ...\n      SWAP3 \t\t\tnction bid(uint _itemId, uint ...\n      SWAP2 \t\t\tnction bid(uint _itemId, uint ...\n      SWAP1 \t\t\tnction bid(uint _itemId, uint ...\n      DUP1 \t\t\tnction bid(uint _itemId, uint ...\n      CALLDATALOAD \t\t\tnction bid(uint _itemId, uint ...\n      SWAP1 \t\t\tnction bid(uint _itemId, uint ...\n      PUSH 20\t\t\tnction bid(uint _itemId, uint ...\n      ADD \t\t\tnction bid(uint _itemId, uint ...\n      SWAP1 \t\t\tnction bid(uint _itemId, uint ...\n      SWAP3 \t\t\tnction bid(uint _itemId, uint ...\n      SWAP2 \t\t\tnction bid(uint _itemId, uint ...\n      SWAP1 \t\t\tnction bid(uint _itemId, uint ...\n      POP \t\t\tnction bid(uint _itemId, uint ...\n      POP \t\t\tnction bid(uint _itemId, uint ...\n      POP \t\t\tnction bid(uint _itemId, uint ...\n      PUSH [tag] 15\t\t\tnction bid(uint _itemId, uint ...\n      JUMP \t\t\tnction bid(uint _itemId, uint ...\n    tag 14\t\t\tnction bid(uint _itemId, uint ...\n      JUMPDEST \t\t\tnction bid(uint _itemId, uint ...\n      STOP \t\t\tnction bid(uint _itemId, uint ...\n    tag 5\t\t\tnction getPersonDetails(uint i...\n      JUMPDEST \t\t\tnction getPersonDetails(uint i...\n      CALLVALUE \t\t\tnction getPersonDetails(uint i...\n      DUP1 \t\t\tolidity ^\n      ISZERO \t\t\ta \n      PUSH [tag] 16\t\t\ta \n      JUMPI \t\t\ta \n      PUSH 0\t\t\tr\n      DUP1 \t\t\to\n      REVERT \t\t\t.26;\\r\\ncontra\n    tag 16\t\t\ta \n      JUMPDEST \t\t\ta \n      POP \t\t\tnction getPersonDetails(uint i...\n      PUSH [tag] 17\t\t\tnction getPersonDetails(uint i...\n      PUSH 4\t\t\tnction getPersonDetails(uint i...\n      DUP1 \t\t\tnction getPersonDetails(uint i...\n      CALLDATASIZE \t\t\tnction getPersonDetails(uint i...\n      SUB \t\t\tnction getPersonDetails(uint i...\n      DUP2 \t\t\tnction getPersonDetails(uint i...\n      ADD \t\t\tnction getPersonDetails(uint i...\n      SWAP1 \t\t\tnction getPersonDetails(uint i...\n      DUP1 \t\t\tnction getPersonDetails(uint i...\n      DUP1 \t\t\tnction getPersonDetails(uint i...\n      CALLDATALOAD \t\t\tnction getPersonDetails(uint i...\n      SWAP1 \t\t\tnction getPersonDetails(uint i...\n      PUSH 20\t\t\tnction getPersonDetails(uint i...\n      ADD \t\t\tnction getPersonDetails(uint i...\n      SWAP1 \t\t\tnction getPersonDetails(uint i...\n      SWAP3 \t\t\tnction getPersonDetails(uint i...\n      SWAP2 \t\t\tnction getPersonDetails(uint i...\n      SWAP1 \t\t\tnction getPersonDetails(uint i...\n      POP \t\t\tnction getPersonDetails(uint i...\n      POP \t\t\tnction getPersonDetails(uint i...\n      POP \t\t\tnction getPersonDetails(uint i...\n      PUSH [tag] 18\t\t\tnction getPersonDetails(uint i...\n      JUMP \t\t\tnction getPersonDetails(uint i...\n    tag 17\t\t\tnction getPersonDetails(uint i...\n      JUMPDEST \t\t\tnction getPersonDetails(uint i...\n      PUSH 40\t\t\tnction getPersonDetails(uint i...\n      MLOAD \t\t\tnction getPersonDetails(uint i...\n      DUP1 \t\t\tnction getPersonDetails(uint i...\n      DUP5 \t\t\tnction getPersonDetails(uint i...\n      DUP2 \t\t\tnction getPersonDetails(uint i...\n      MSTORE \t\t\tnction getPersonDetails(uint i...\n      PUSH 20\t\t\tnction getPersonDetails(uint i...\n      ADD \t\t\tnction getPersonDetails(uint i...\n      DUP4 \t\t\tnction getPersonDetails(uint i...\n      DUP2 \t\t\tnction getPersonDetails(uint i...\n      MSTORE \t\t\tnction getPersonDetails(uint i...\n      PUSH 20\t\t\tnction getPersonDetails(uint i...\n      ADD \t\t\tnction getPersonDetails(uint i...\n      DUP3 \t\t\tnction getPersonDetails(uint i...\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tnction getPersonDetails(uint i...\n      AND \t\t\tnction getPersonDetails(uint i...\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tnction getPersonDetails(uint i...\n      AND \t\t\tnction getPersonDetails(uint i...\n      DUP2 \t\t\tnction getPersonDetails(uint i...\n      MSTORE \t\t\tnction getPersonDetails(uint i...\n      PUSH 20\t\t\tnction getPersonDetails(uint i...\n      ADD \t\t\tnction getPersonDetails(uint i...\n      SWAP4 \t\t\tnction getPersonDetails(uint i...\n      POP \t\t\tnction getPersonDetails(uint i...\n      POP \t\t\tnction getPersonDetails(uint i...\n      POP \t\t\tnction getPersonDetails(uint i...\n      POP \t\t\tnction getPersonDetails(uint i...\n      PUSH 40\t\t\tnction getPersonDetails(uint i...\n      MLOAD \t\t\tnction getPersonDetails(uint i...\n      DUP1 \t\t\tnction getPersonDetails(uint i...\n      SWAP2 \t\t\tnction getPersonDetails(uint i...\n      SUB \t\t\tnction getPersonDetails(uint i...\n      SWAP1 \t\t\tnction getPersonDetails(uint i...\n      RETURN \t\t\tnction getPersonDetails(uint i...\n    tag 6\t\t\tnction revealWinners() public ...\n      JUMPDEST \t\t\tnction revealWinners() public ...\n      CALLVALUE \t\t\tnction revealWinners() public ...\n      DUP1 \t\t\tolidity ^\n      ISZERO \t\t\ta \n      PUSH [tag] 19\t\t\ta \n      JUMPI \t\t\ta \n      PUSH 0\t\t\tr\n      DUP1 \t\t\to\n      REVERT \t\t\t.26;\\r\\ncontra\n    tag 19\t\t\ta \n      JUMPDEST \t\t\ta \n      POP \t\t\tnction revealWinners() public ...\n      PUSH [tag] 20\t\t\tnction revealWinners() public ...\n      PUSH [tag] 21\t\t\tnction revealWinners() public ...\n      JUMP \t\t\tnction revealWinners() public ...\n    tag 20\t\t\tnction revealWinners() public ...\n      JUMPDEST \t\t\tnction revealWinners() public ...\n      STOP \t\t\tnction revealWinners() public ...\n    tag 7\t\t\taddress[3] public winners\n      JUMPDEST \t\t\taddress[3] public winners\n      CALLVALUE \t\t\taddress[3] public winners\n      DUP1 \t\t\tolidity ^\n      ISZERO \t\t\ta \n      PUSH [tag] 22\t\t\ta \n      JUMPI \t\t\ta \n      PUSH 0\t\t\tr\n      DUP1 \t\t\to\n      REVERT \t\t\t.26;\\r\\ncontra\n    tag 22\t\t\ta \n      JUMPDEST \t\t\ta \n      POP \t\t\taddress[3] public winners\n      PUSH [tag] 23\t\t\taddress[3] public winners\n      PUSH 4\t\t\taddress[3] public winners\n      DUP1 \t\t\taddress[3] public winners\n      CALLDATASIZE \t\t\taddress[3] public winners\n      SUB \t\t\taddress[3] public winners\n      DUP2 \t\t\taddress[3] public winners\n      ADD \t\t\taddress[3] public winners\n      SWAP1 \t\t\taddress[3] public winners\n      DUP1 \t\t\taddress[3] public winners\n      DUP1 \t\t\taddress[3] public winners\n      CALLDATALOAD \t\t\taddress[3] public winners\n      SWAP1 \t\t\taddress[3] public winners\n      PUSH 20\t\t\taddress[3] public winners\n      ADD \t\t\taddress[3] public winners\n      SWAP1 \t\t\taddress[3] public winners\n      SWAP3 \t\t\taddress[3] public winners\n      SWAP2 \t\t\taddress[3] public winners\n      SWAP1 \t\t\taddress[3] public winners\n      POP \t\t\taddress[3] public winners\n      POP \t\t\taddress[3] public winners\n      POP \t\t\taddress[3] public winners\n      PUSH [tag] 24\t\t\taddress[3] public winners\n      JUMP \t\t\taddress[3] public winners\n    tag 23\t\t\taddress[3] public winners\n      JUMPDEST \t\t\taddress[3] public winners\n      PUSH 40\t\t\taddress[3] public winners\n      MLOAD \t\t\taddress[3] public winners\n      DUP1 \t\t\taddress[3] public winners\n      DUP3 \t\t\taddress[3] public winners\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\taddress[3] public winners\n      AND \t\t\taddress[3] public winners\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\taddress[3] public winners\n      AND \t\t\taddress[3] public winners\n      DUP2 \t\t\taddress[3] public winners\n      MSTORE \t\t\taddress[3] public winners\n      PUSH 20\t\t\taddress[3] public winners\n      ADD \t\t\taddress[3] public winners\n      SWAP2 \t\t\taddress[3] public winners\n      POP \t\t\taddress[3] public winners\n      POP \t\t\taddress[3] public winners\n      PUSH 40\t\t\taddress[3] public winners\n      MLOAD \t\t\taddress[3] public winners\n      DUP1 \t\t\taddress[3] public winners\n      SWAP2 \t\t\taddress[3] public winners\n      SUB \t\t\taddress[3] public winners\n      SWAP1 \t\t\taddress[3] public winners\n      RETURN \t\t\taddress[3] public winners\n    tag 8\t\t\tItem [3] public items\n      JUMPDEST \t\t\tItem [3] public items\n      CALLVALUE \t\t\tItem [3] public items\n      DUP1 \t\t\tolidity ^\n      ISZERO \t\t\ta \n      PUSH [tag] 25\t\t\ta \n      JUMPI \t\t\ta \n      PUSH 0\t\t\tr\n      DUP1 \t\t\to\n      REVERT \t\t\t.26;\\r\\ncontra\n    tag 25\t\t\ta \n      JUMPDEST \t\t\ta \n      POP \t\t\tItem [3] public items\n      PUSH [tag] 26\t\t\tItem [3] public items\n      PUSH 4\t\t\tItem [3] public items\n      DUP1 \t\t\tItem [3] public items\n      CALLDATASIZE \t\t\tItem [3] public items\n      SUB \t\t\tItem [3] public items\n      DUP2 \t\t\tItem [3] public items\n      ADD \t\t\tItem [3] public items\n      SWAP1 \t\t\tItem [3] public items\n      DUP1 \t\t\tItem [3] public items\n      DUP1 \t\t\tItem [3] public items\n      CALLDATALOAD \t\t\tItem [3] public items\n      SWAP1 \t\t\tItem [3] public items\n      PUSH 20\t\t\tItem [3] public items\n      ADD \t\t\tItem [3] public items\n      SWAP1 \t\t\tItem [3] public items\n      SWAP3 \t\t\tItem [3] public items\n      SWAP2 \t\t\tItem [3] public items\n      SWAP1 \t\t\tItem [3] public items\n      POP \t\t\tItem [3] public items\n      POP \t\t\tItem [3] public items\n      POP \t\t\tItem [3] public items\n      PUSH [tag] 27\t\t\tItem [3] public items\n      JUMP \t\t\tItem [3] public items\n    tag 26\t\t\tItem [3] public items\n      JUMPDEST \t\t\tItem [3] public items\n      PUSH 40\t\t\tItem [3] public items\n      MLOAD \t\t\tItem [3] public items\n      DUP1 \t\t\tItem [3] public items\n      DUP3 \t\t\tItem [3] public items\n      DUP2 \t\t\tItem [3] public items\n      MSTORE \t\t\tItem [3] public items\n      PUSH 20\t\t\tItem [3] public items\n      ADD \t\t\tItem [3] public items\n      SWAP2 \t\t\tItem [3] public items\n      POP \t\t\tItem [3] public items\n      POP \t\t\tItem [3] public items\n      PUSH 40\t\t\tItem [3] public items\n      MLOAD \t\t\tItem [3] public items\n      DUP1 \t\t\tItem [3] public items\n      SWAP2 \t\t\tItem [3] public items\n      SUB \t\t\tItem [3] public items\n      SWAP1 \t\t\tItem [3] public items\n      RETURN \t\t\tItem [3] public items\n    tag 10\t\t\tnction register() public payab...\n      JUMPDEST \t\t\tnction register() public payab...\n      PUSH 17\t\t\tdderCount;\\r\n      SLOAD \t\t\tdderCount;\\r\n      PUSH 1\t\t\tdders[b\n      PUSH 17\t\t\tdderCount].\n      SLOAD \t\t\tdderCount].\n      PUSH 4\t\t\tdders[bidderCount].p\n      DUP2 \t\t\tdders[bidderCount].p\n      LT \t\t\tdders[bidderCount].p\n      ISZERO \t\t\tdders[bidderCount].p\n      ISZERO \t\t\tdders[bidderCount].p\n      PUSH [tag] 29\t\t\tdders[bidderCount].p\n      JUMPI \t\t\tdders[bidderCount].p\n      INVALID \t\t\tdders[bidderCount].p\n    tag 29\t\t\tdders[bidderCount].p\n      JUMPDEST \t\t\tdders[bidderCount].p\n      PUSH 3\t\t\tdders[bidderCount].p\n      MUL \t\t\tdders[bidderCount].p\n      ADD \t\t\tdders[bidderCount].p\n      PUSH 1\t\t\tdders[bidderCount].personId =\n      ADD \t\t\tdders[bidderCount].personId =\n      DUP2 \t\t\tdders[bidderCount].personId = ...\n      SWAP1 \t\t\tdders[bidderCount].personId = ...\n      SSTORE \t\t\tdders[bidderCount].personId = ...\n      POP \t\t\tdders[bidderCount].personId = ...\n      CALLER \t\t\tg.sender;\\r\n      PUSH 1\t\t\tdders[b\n      PUSH 17\t\t\tdderCount].\n      SLOAD \t\t\tdderCount].\n      PUSH 4\t\t\tdders[bidderCount].a\n      DUP2 \t\t\tdders[bidderCount].a\n      LT \t\t\tdders[bidderCount].a\n      ISZERO \t\t\tdders[bidderCount].a\n      ISZERO \t\t\tdders[bidderCount].a\n      PUSH [tag] 31\t\t\tdders[bidderCount].a\n      JUMPI \t\t\tdders[bidderCount].a\n      INVALID \t\t\tdders[bidderCount].a\n    tag 31\t\t\tdders[bidderCount].a\n      JUMPDEST \t\t\tdders[bidderCount].a\n      PUSH 3\t\t\tdders[bidderCount].a\n      MUL \t\t\tdders[bidderCount].a\n      ADD \t\t\tdders[bidderCount].a\n      PUSH 2\t\t\tdders[bidderCount].addr=m\n      ADD \t\t\tdders[bidderCount].addr=m\n      PUSH 0\t\t\tdders[bidderCount].addr=m\n      PUSH 100\t\t\tdders[bidderCount].addr=msg.se...\n      EXP \t\t\tdders[bidderCount].addr=msg.se...\n      DUP2 \t\t\tdders[bidderCount].addr=msg.se...\n      SLOAD \t\t\tdders[bidderCount].addr=msg.se...\n      DUP2 \t\t\tdders[bidderCount].addr=msg.se...\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tdders[bidderCount].addr=msg.se...\n      MUL \t\t\tdders[bidderCount].addr=msg.se...\n      NOT \t\t\tdders[bidderCount].addr=msg.se...\n      AND \t\t\tdders[bidderCount].addr=msg.se...\n      SWAP1 \t\t\tdders[bidderCount].addr=msg.se...\n      DUP4 \t\t\tdders[bidderCount].addr=msg.se...\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tdders[bidderCount].addr=msg.se...\n      AND \t\t\tdders[bidderCount].addr=msg.se...\n      MUL \t\t\tdders[bidderCount].addr=msg.se...\n      OR \t\t\tdders[bidderCount].addr=msg.se...\n      SWAP1 \t\t\tdders[bidderCount].addr=msg.se...\n      SSTORE \t\t\tdders[bidderCount].addr=msg.se...\n      POP \t\t\tdders[bidderCount].addr=msg.se...\n      PUSH 5\t\t\t \n      PUSH 1\t\t\tdders[b\n      PUSH 17\t\t\tdderCount].\n      SLOAD \t\t\tdderCount].\n      PUSH 4\t\t\tdders[bidderCount].r\n      DUP2 \t\t\tdders[bidderCount].r\n      LT \t\t\tdders[bidderCount].r\n      ISZERO \t\t\tdders[bidderCount].r\n      ISZERO \t\t\tdders[bidderCount].r\n      PUSH [tag] 33\t\t\tdders[bidderCount].r\n      JUMPI \t\t\tdders[bidderCount].r\n      INVALID \t\t\tdders[bidderCount].r\n    tag 33\t\t\tdders[bidderCount].r\n      JUMPDEST \t\t\tdders[bidderCount].r\n      PUSH 3\t\t\tdders[bidderCount].r\n      MUL \t\t\tdders[bidderCount].r\n      ADD \t\t\tdders[bidderCount].r\n      PUSH 0\t\t\tdders[bidderCount].remainingTo...\n      ADD \t\t\tdders[bidderCount].remainingTo...\n      DUP2 \t\t\tdders[bidderCount].remainingTo...\n      SWAP1 \t\t\tdders[bidderCount].remainingTo...\n      SSTORE \t\t\tdders[bidderCount].remainingTo...\n      POP \t\t\tdders[bidderCount].remainingTo...\n      PUSH 1\t\t\tdders[b\n      PUSH 17\t\t\tdderCount];\n      SLOAD \t\t\tdderCount];\n      PUSH 4\t\t\tdders[bidderCount];\\r\n      DUP2 \t\t\tdders[bidderCount];\\r\n      LT \t\t\tdders[bidderCount];\\r\n      ISZERO \t\t\tdders[bidderCount];\\r\n      ISZERO \t\t\tdders[bidderCount];\\r\n      PUSH [tag] 35\t\t\tdders[bidderCount];\\r\n      JUMPI \t\t\tdders[bidderCount];\\r\n      INVALID \t\t\tdders[bidderCount];\\r\n    tag 35\t\t\tdders[bidderCount];\\r\n      JUMPDEST \t\t\tdders[bidderCount];\\r\n      PUSH 3\t\t\tdders[bidderCount];\\r\n      MUL \t\t\tdders[bidderCount];\\r\n      ADD \t\t\tdders[bidderCount];\\r\n      PUSH 0\t\t\tkenDetails[m\n      DUP1 \t\t\tkenDetails[msg.sender]=b\n      CALLER \t\t\tg.sender]=\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender]=b\n      AND \t\t\tkenDetails[msg.sender]=b\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender]=b\n      AND \t\t\tkenDetails[msg.sender]=b\n      DUP2 \t\t\tkenDetails[msg.sender]=b\n      MSTORE \t\t\tkenDetails[msg.sender]=b\n      PUSH 20\t\t\tkenDetails[msg.sender]=b\n      ADD \t\t\tkenDetails[msg.sender]=b\n      SWAP1 \t\t\tkenDetails[msg.sender]=b\n      DUP2 \t\t\tkenDetails[msg.sender]=b\n      MSTORE \t\t\tkenDetails[msg.sender]=b\n      PUSH 20\t\t\tkenDetails[msg.sender]=b\n      ADD \t\t\tkenDetails[msg.sender]=b\n      PUSH 0\t\t\tkenDetails[msg.sender]=b\n      KECCAK256 \t\t\tkenDetails[msg.sender]=b\n      PUSH 0\t\t\tkenDetails[msg.sender]=bidders...\n      DUP3 \t\t\tkenDetails[msg.sender]=bidders...\n      ADD \t\t\tkenDetails[msg.sender]=bidders...\n      SLOAD \t\t\tkenDetails[msg.sender]=bidders...\n      DUP2 \t\t\tkenDetails[msg.sender]=bidders...\n      PUSH 0\t\t\tkenDetails[msg.sender]=bidders...\n      ADD \t\t\tkenDetails[msg.sender]=bidders...\n      SSTORE \t\t\tkenDetails[msg.sender]=bidders...\n      PUSH 1\t\t\tkenDetails[msg.sender]=bidders...\n      DUP3 \t\t\tkenDetails[msg.sender]=bidders...\n      ADD \t\t\tkenDetails[msg.sender]=bidders...\n      SLOAD \t\t\tkenDetails[msg.sender]=bidders...\n      DUP2 \t\t\tkenDetails[msg.sender]=bidders...\n      PUSH 1\t\t\tkenDetails[msg.sender]=bidders...\n      ADD \t\t\tkenDetails[msg.sender]=bidders...\n      SSTORE \t\t\tkenDetails[msg.sender]=bidders...\n      PUSH 2\t\t\tkenDetails[msg.sender]=bidders...\n      DUP3 \t\t\tkenDetails[msg.sender]=bidders...\n      ADD \t\t\tkenDetails[msg.sender]=bidders...\n      PUSH 0\t\t\tkenDetails[msg.sender]=bidders...\n      SWAP1 \t\t\tkenDetails[msg.sender]=bidders...\n      SLOAD \t\t\tkenDetails[msg.sender]=bidders...\n      SWAP1 \t\t\tkenDetails[msg.sender]=bidders...\n      PUSH 100\t\t\tkenDetails[msg.sender]=bidders...\n      EXP \t\t\tkenDetails[msg.sender]=bidders...\n      SWAP1 \t\t\tkenDetails[msg.sender]=bidders...\n      DIV \t\t\tkenDetails[msg.sender]=bidders...\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender]=bidders...\n      AND \t\t\tkenDetails[msg.sender]=bidders...\n      DUP2 \t\t\tkenDetails[msg.sender]=bidders...\n      PUSH 2\t\t\tkenDetails[msg.sender]=bidders...\n      ADD \t\t\tkenDetails[msg.sender]=bidders...\n      PUSH 0\t\t\tkenDetails[msg.sender]=bidders...\n      PUSH 100\t\t\tkenDetails[msg.sender]=bidders...\n      EXP \t\t\tkenDetails[msg.sender]=bidders...\n      DUP2 \t\t\tkenDetails[msg.sender]=bidders...\n      SLOAD \t\t\tkenDetails[msg.sender]=bidders...\n      DUP2 \t\t\tkenDetails[msg.sender]=bidders...\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender]=bidders...\n      MUL \t\t\tkenDetails[msg.sender]=bidders...\n      NOT \t\t\tkenDetails[msg.sender]=bidders...\n      AND \t\t\tkenDetails[msg.sender]=bidders...\n      SWAP1 \t\t\tkenDetails[msg.sender]=bidders...\n      DUP4 \t\t\tkenDetails[msg.sender]=bidders...\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender]=bidders...\n      AND \t\t\tkenDetails[msg.sender]=bidders...\n      MUL \t\t\tkenDetails[msg.sender]=bidders...\n      OR \t\t\tkenDetails[msg.sender]=bidders...\n      SWAP1 \t\t\tkenDetails[msg.sender]=bidders...\n      SSTORE \t\t\tkenDetails[msg.sender]=bidders...\n      POP \t\t\tkenDetails[msg.sender]=bidders...\n      SWAP1 \t\t\tkenDetails[msg.sender]=bidders...\n      POP \t\t\tkenDetails[msg.sender]=bidders...\n      POP \t\t\tkenDetails[msg.sender]=bidders...\n      PUSH 17\t\t\tdderCount++\n      PUSH 0\t\t\tdderCount++\n      DUP2 \t\t\tdderCount++;\\r\n      SLOAD \t\t\tdderCount++;\\r\n      DUP1 \t\t\tdderCount++;\\r\n      SWAP3 \t\t\tdderCount++;\\r\n      SWAP2 \t\t\tdderCount++;\\r\n      SWAP1 \t\t\tdderCount++;\\r\n      PUSH 1\t\t\tdderCount++;\\r\n      ADD \t\t\tdderCount++;\\r\n      SWAP2 \t\t\tdderCount++;\\r\n      SWAP1 \t\t\tdderCount++;\\r\n      POP \t\t\tdderCount++;\\r\n      SSTORE \t\t\tdderCount++;\\r\n      POP \t\t\tdderCount++;\\r\n      JUMP [out]\t\t\tnction register() public payab...\n    tag 13\t\t\taddress public beneficiary\n      JUMPDEST \t\t\taddress public beneficiary\n      PUSH 16\t\t\taddress public beneficiary\n      PUSH 0\t\t\taddress public beneficiary\n      SWAP1 \t\t\taddress public beneficiary\n      SLOAD \t\t\taddress public beneficiary\n      SWAP1 \t\t\taddress public beneficiary\n      PUSH 100\t\t\taddress public beneficiary\n      EXP \t\t\taddress public beneficiary\n      SWAP1 \t\t\taddress public beneficiary\n      DIV \t\t\taddress public beneficiary\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\taddress public beneficiary\n      AND \t\t\taddress public beneficiary\n      DUP2 \t\t\taddress public beneficiary\n      JUMP [out]\t\t\taddress public beneficiary\n    tag 15\t\t\tnction bid(uint _itemId, uint ...\n      JUMPDEST \t\t\tnction bid(uint _itemId, uint ...\n      PUSH 0\t\t\tnt balance=t\n      DUP1 \t\t\tem storage bidItem =\n      PUSH 0\t\t\tnt i=0\n      DUP4 \t\t\tount |\n      PUSH 0\t\t\tkenDetails[m\n      DUP1 \t\t\tkenDetails[msg.sender].r\n      CALLER \t\t\tg.sender].\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender].r\n      AND \t\t\tkenDetails[msg.sender].r\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender].r\n      AND \t\t\tkenDetails[msg.sender].r\n      DUP2 \t\t\tkenDetails[msg.sender].r\n      MSTORE \t\t\tkenDetails[msg.sender].r\n      PUSH 20\t\t\tkenDetails[msg.sender].r\n      ADD \t\t\tkenDetails[msg.sender].r\n      SWAP1 \t\t\tkenDetails[msg.sender].r\n      DUP2 \t\t\tkenDetails[msg.sender].r\n      MSTORE \t\t\tkenDetails[msg.sender].r\n      PUSH 20\t\t\tkenDetails[msg.sender].r\n      ADD \t\t\tkenDetails[msg.sender].r\n      PUSH 0\t\t\tkenDetails[msg.sender].r\n      KECCAK256 \t\t\tkenDetails[msg.sender].r\n      PUSH 0\t\t\tkenDetails[msg.sender].remaini...\n      ADD \t\t\tkenDetails[msg.sender].remaini...\n      SLOAD \t\t\tkenDetails[msg.sender].remaini...\n      LT \t\t\tkenDetails[msg.sender].remaini...\n      DUP1 \t\t\tkenDetails[msg.sender].remaini...\n      PUSH [tag] 38\t\t\tkenDetails[msg.sender].remaini...\n      JUMPI \t\t\tkenDetails[msg.sender].remaini...\n      POP \t\t\tkenDetails[msg.sender].remaini...\n      PUSH 0\t\t\t \n      DUP1 \t\t\tkenDetails[m\n      PUSH 0\t\t\tkenDetails[msg.sender].r\n      CALLER \t\t\tg.sender].\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender].r\n      AND \t\t\tkenDetails[msg.sender].r\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender].r\n      AND \t\t\tkenDetails[msg.sender].r\n      DUP2 \t\t\tkenDetails[msg.sender].r\n      MSTORE \t\t\tkenDetails[msg.sender].r\n      PUSH 20\t\t\tkenDetails[msg.sender].r\n      ADD \t\t\tkenDetails[msg.sender].r\n      SWAP1 \t\t\tkenDetails[msg.sender].r\n      DUP2 \t\t\tkenDetails[msg.sender].r\n      MSTORE \t\t\tkenDetails[msg.sender].r\n      PUSH 20\t\t\tkenDetails[msg.sender].r\n      ADD \t\t\tkenDetails[msg.sender].r\n      PUSH 0\t\t\tkenDetails[msg.sender].r\n      KECCAK256 \t\t\tkenDetails[msg.sender].r\n      PUSH 0\t\t\tkenDetails[msg.sender].remaini...\n      ADD \t\t\tkenDetails[msg.sender].remaini...\n      SLOAD \t\t\tkenDetails[msg.sender].remaini...\n      EQ \t\t\tkenDetails[msg.sender].remaini...\n    tag 38\t\t\tkenDetails[msg.sender].remaini...\n      JUMPDEST \t\t\tkenDetails[msg.sender].remaini...\n      ISZERO \t\t\t (tokenDetails[msg.sender].rem...\n      PUSH [tag] 39\t\t\t (tokenDetails[msg.sender].rem...\n      JUMPI \t\t\t (tokenDetails[msg.sender].rem...\n      PUSH 0\t\t\tvert();\\r\n      DUP1 \t\t\tvert();\\r\n      REVERT \t\t\tvert();\\r\n    tag 39\t\t\t (tokenDetails[msg.sender].rem...\n      JUMPDEST \t\t\t (tokenDetails[msg.sender].rem...\n      PUSH 2\t\t\t \n      DUP6 \t\t\ttemId >\n      GT \t\t\ttemId > 2) \n      ISZERO \t\t\t (_itemId > 2) {\\r\\n          ...\n      PUSH [tag] 40\t\t\t (_itemId > 2) {\\r\\n          ...\n      JUMPI \t\t\t (_itemId > 2) {\\r\\n          ...\n      PUSH 0\t\t\tvert();\\r\n      DUP1 \t\t\tvert();\\r\n      REVERT \t\t\tvert();\\r\n    tag 40\t\t\t (_itemId > 2) {\\r\\n          ...\n      JUMPDEST \t\t\t (_itemId > 2) {\\r\\n          ...\n      DUP4 \t\t\tount;\\r\n      PUSH 0\t\t\tkenDetails[m\n      DUP1 \t\t\tkenDetails[msg.sender].r\n      CALLER \t\t\tg.sender].\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender].r\n      AND \t\t\tkenDetails[msg.sender].r\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender].r\n      AND \t\t\tkenDetails[msg.sender].r\n      DUP2 \t\t\tkenDetails[msg.sender].r\n      MSTORE \t\t\tkenDetails[msg.sender].r\n      PUSH 20\t\t\tkenDetails[msg.sender].r\n      ADD \t\t\tkenDetails[msg.sender].r\n      SWAP1 \t\t\tkenDetails[msg.sender].r\n      DUP2 \t\t\tkenDetails[msg.sender].r\n      MSTORE \t\t\tkenDetails[msg.sender].r\n      PUSH 20\t\t\tkenDetails[msg.sender].r\n      ADD \t\t\tkenDetails[msg.sender].r\n      PUSH 0\t\t\tkenDetails[msg.sender].r\n      KECCAK256 \t\t\tkenDetails[msg.sender].r\n      PUSH 0\t\t\tkenDetails[msg.sender].remaini...\n      ADD \t\t\tkenDetails[msg.sender].remaini...\n      SLOAD \t\t\tkenDetails[msg.sender].remaini...\n      SUB \t\t\tkenDetails[msg.sender].remaini...\n      SWAP3 \t\t\tnt balance=tokenDetails[msg.se...\n      POP \t\t\tnt balance=tokenDetails[msg.se...\n      DUP3 \t\t\tlance;\\r\n      PUSH 0\t\t\tkenDetails[m\n      DUP1 \t\t\tkenDetails[msg.sender].r\n      CALLER \t\t\tg.sender].\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender].r\n      AND \t\t\tkenDetails[msg.sender].r\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender].r\n      AND \t\t\tkenDetails[msg.sender].r\n      DUP2 \t\t\tkenDetails[msg.sender].r\n      MSTORE \t\t\tkenDetails[msg.sender].r\n      PUSH 20\t\t\tkenDetails[msg.sender].r\n      ADD \t\t\tkenDetails[msg.sender].r\n      SWAP1 \t\t\tkenDetails[msg.sender].r\n      DUP2 \t\t\tkenDetails[msg.sender].r\n      MSTORE \t\t\tkenDetails[msg.sender].r\n      PUSH 20\t\t\tkenDetails[msg.sender].r\n      ADD \t\t\tkenDetails[msg.sender].r\n      PUSH 0\t\t\tkenDetails[msg.sender].r\n      KECCAK256 \t\t\tkenDetails[msg.sender].r\n      PUSH 0\t\t\tkenDetails[msg.sender].remaini...\n      ADD \t\t\tkenDetails[msg.sender].remaini...\n      DUP2 \t\t\tkenDetails[msg.sender].remaini...\n      SWAP1 \t\t\tkenDetails[msg.sender].remaini...\n      SSTORE \t\t\tkenDetails[msg.sender].remaini...\n      POP \t\t\tkenDetails[msg.sender].remaini...\n      DUP3 \t\t\tlance;/\n      PUSH 1\t\t\tdders[t\n      PUSH 0\t\t\tkenDetails[m\n      DUP1 \t\t\tkenDetails[msg.sender].p\n      CALLER \t\t\tg.sender].\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender].p\n      AND \t\t\tkenDetails[msg.sender].p\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender].p\n      AND \t\t\tkenDetails[msg.sender].p\n      DUP2 \t\t\tkenDetails[msg.sender].p\n      MSTORE \t\t\tkenDetails[msg.sender].p\n      PUSH 20\t\t\tkenDetails[msg.sender].p\n      ADD \t\t\tkenDetails[msg.sender].p\n      SWAP1 \t\t\tkenDetails[msg.sender].p\n      DUP2 \t\t\tkenDetails[msg.sender].p\n      MSTORE \t\t\tkenDetails[msg.sender].p\n      PUSH 20\t\t\tkenDetails[msg.sender].p\n      ADD \t\t\tkenDetails[msg.sender].p\n      PUSH 0\t\t\tkenDetails[msg.sender].p\n      KECCAK256 \t\t\tkenDetails[msg.sender].p\n      PUSH 1\t\t\tkenDetails[msg.sender].personI...\n      ADD \t\t\tkenDetails[msg.sender].personI...\n      SLOAD \t\t\tkenDetails[msg.sender].personI...\n      PUSH 4\t\t\tdders[tokenDetails[msg.sender]...\n      DUP2 \t\t\tdders[tokenDetails[msg.sender]...\n      LT \t\t\tdders[tokenDetails[msg.sender]...\n      ISZERO \t\t\tdders[tokenDetails[msg.sender]...\n      ISZERO \t\t\tdders[tokenDetails[msg.sender]...\n      PUSH [tag] 41\t\t\tdders[tokenDetails[msg.sender]...\n      JUMPI \t\t\tdders[tokenDetails[msg.sender]...\n      INVALID \t\t\tdders[tokenDetails[msg.sender]...\n    tag 41\t\t\tdders[tokenDetails[msg.sender]...\n      JUMPDEST \t\t\tdders[tokenDetails[msg.sender]...\n      PUSH 3\t\t\tdders[tokenDetails[msg.sender]...\n      MUL \t\t\tdders[tokenDetails[msg.sender]...\n      ADD \t\t\tdders[tokenDetails[msg.sender]...\n      PUSH 0\t\t\tdders[tokenDetails[msg.sender]...\n      ADD \t\t\tdders[tokenDetails[msg.sender]...\n      DUP2 \t\t\tdders[tokenDetails[msg.sender]...\n      SWAP1 \t\t\tdders[tokenDetails[msg.sender]...\n      SSTORE \t\t\tdders[tokenDetails[msg.sender]...\n      POP \t\t\tdders[tokenDetails[msg.sender]...\n      PUSH D\t\t\tems[_\n      DUP6 \t\t\ttemId];\n      PUSH 3\t\t\tems[_itemId];\\r\n      DUP2 \t\t\tems[_itemId];\\r\n      LT \t\t\tems[_itemId];\\r\n      ISZERO \t\t\tems[_itemId];\\r\n      ISZERO \t\t\tems[_itemId];\\r\n      PUSH [tag] 43\t\t\tems[_itemId];\\r\n      JUMPI \t\t\tems[_itemId];\\r\n      INVALID \t\t\tems[_itemId];\\r\n    tag 43\t\t\tems[_itemId];\\r\n      JUMPDEST \t\t\tems[_itemId];\\r\n      PUSH 2\t\t\tems[_itemId];\\r\n      MUL \t\t\tems[_itemId];\\r\n      ADD \t\t\tems[_itemId];\\r\n      SWAP2 \t\t\tem storage bidItem = items[_it...\n      POP \t\t\tem storage bidItem = items[_it...\n      PUSH 0\t\t\t \n      SWAP1 \t\t\tnt i=0; \n      POP \t\t\tnt i=0; \n    tag 45\t\t\tr(uint i=0; i<_count;i++) {\\r\\...\n      JUMPDEST \t\t\tr(uint i=0; i<_count;i++) {\\r\\...\n      DUP4 \t\t\tount;i\n      DUP2 \t\t\t_\n      LT \t\t\t_count;i\n      ISZERO \t\t\tr(uint i=0; i<_count;i++) {\\r\\...\n      PUSH [tag] 46\t\t\tr(uint i=0; i<_count;i++) {\\r\\...\n      JUMPI \t\t\tr(uint i=0; i<_count;i++) {\\r\\...\n      DUP2 \t\t\tdItem.i\n      PUSH 1\t\t\tdItem.itemTokens.p\n      ADD \t\t\tdItem.itemTokens.p\n      PUSH 0\t\t\tkenDetails[m\n      DUP1 \t\t\tkenDetails[msg.sender].p\n      CALLER \t\t\tg.sender].\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender].p\n      AND \t\t\tkenDetails[msg.sender].p\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tkenDetails[msg.sender].p\n      AND \t\t\tkenDetails[msg.sender].p\n      DUP2 \t\t\tkenDetails[msg.sender].p\n      MSTORE \t\t\tkenDetails[msg.sender].p\n      PUSH 20\t\t\tkenDetails[msg.sender].p\n      ADD \t\t\tkenDetails[msg.sender].p\n      SWAP1 \t\t\tkenDetails[msg.sender].p\n      DUP2 \t\t\tkenDetails[msg.sender].p\n      MSTORE \t\t\tkenDetails[msg.sender].p\n      PUSH 20\t\t\tkenDetails[msg.sender].p\n      ADD \t\t\tkenDetails[msg.sender].p\n      PUSH 0\t\t\tkenDetails[msg.sender].p\n      KECCAK256 \t\t\tkenDetails[msg.sender].p\n      PUSH 1\t\t\tkenDetails[msg.sender].personI...\n      ADD \t\t\tkenDetails[msg.sender].personI...\n      SLOAD \t\t\tkenDetails[msg.sender].personI...\n      SWAP1 \t\t\tdItem.itemTokens.push(tokenDet...\n      DUP1 \t\t\tdItem.itemTokens.push(tokenDet...\n      PUSH 1\t\t\ti\n      DUP2 \t\t\tt A\n      SLOAD \t\t\tontract Au\n      ADD \t\t\t;\\r\\ncontract Auctio\n      DUP1 \t\t\t/ Data\\r\\n  \n      DUP3 \t\t\t   \n      SSTORE \t\t\t\\n    \\r\\n    // Data\\r\\n   \n      DUP1 \t\t\te to hold \n      SWAP2 \t\t\ttructure to hold \n      POP \t\t\ttructure to hold \n      POP \t\t\tpragma solidity ^0.4.26;\\r\\nco...\n      SWAP1 \t\t\tdItem.itemTokens.push(tokenDet...\n      PUSH 1\t\t\tdItem.itemTokens.push(tokenDet...\n      DUP3 \t\t\tdItem.itemTokens.push(tokenDet...\n      SUB \t\t\tdItem.itemTokens.push(tokenDet...\n      SWAP1 \t\t\tdItem.itemTokens.push(tokenDet...\n      PUSH 0\t\t\tdItem.itemTokens.push(tokenDet...\n      MSTORE \t\t\tdItem.itemTokens.push(tokenDet...\n      PUSH 20\t\t\tdItem.itemTokens.push(tokenDet...\n      PUSH 0\t\t\tdItem.itemTokens.push(tokenDet...\n      KECCAK256 \t\t\tdItem.itemTokens.push(tokenDet...\n      ADD \t\t\tdItem.itemTokens.push(tokenDet...\n      PUSH 0\t\t\tdItem.itemTokens.push(tokenDet...\n      SWAP1 \t\t\tdItem.itemTokens.push(tokenDet...\n      SWAP2 \t\t\tdItem.itemTokens.push(tokenDet...\n      SWAP3 \t\t\tdItem.itemTokens.push(tokenDet...\n      SWAP1 \t\t\tdItem.itemTokens.push(tokenDet...\n      SWAP2 \t\t\tdItem.itemTokens.push(tokenDet...\n      SWAP1 \t\t\tdItem.itemTokens.push(tokenDet...\n      SWAP2 \t\t\tdItem.itemTokens.push(tokenDet...\n      POP \t\t\tdItem.itemTokens.push(tokenDet...\n      SSTORE \t\t\tdItem.itemTokens.push(tokenDet...\n      POP \t\t\tdItem.itemTokens.push(tokenDet...\n      DUP1 \t\t\t+) \n      DUP1 \t\t\t+) \n      PUSH 1\t\t\t+) \n      ADD \t\t\t+) \n      SWAP2 \t\t\t+) \n      POP \t\t\t+) \n      POP \t\t\t+) \n      PUSH [tag] 45\t\t\tr(uint i=0; i<_count;i++) {\\r\\...\n      JUMP \t\t\tr(uint i=0; i<_count;i++) {\\r\\...\n    tag 46\t\t\tr(uint i=0; i<_count;i++) {\\r\\...\n      JUMPDEST \t\t\tr(uint i=0; i<_count;i++) {\\r\\...\n      POP \t\t\tnction bid(uint _itemId, uint ...\n      POP \t\t\tnction bid(uint _itemId, uint ...\n      POP \t\t\tnction bid(uint _itemId, uint ...\n      POP \t\t\tnction bid(uint _itemId, uint ...\n      POP \t\t\tnction bid(uint _itemId, uint ...\n      JUMP [out]\t\t\tnction bid(uint _itemId, uint ...\n    tag 18\t\t\tnction getPersonDetails(uint i...\n      JUMPDEST \t\t\tnction getPersonDetails(uint i...\n      PUSH 0\t\t\tnt,u\n      DUP1 \t\t\tnt,a\n      PUSH 0\t\t\tdress){\n      PUSH 1\t\t\tdders[i\n      DUP5 \t\t\t].\n      PUSH 4\t\t\tdders[id].r\n      DUP2 \t\t\tdders[id].r\n      LT \t\t\tdders[id].r\n      ISZERO \t\t\tdders[id].r\n      ISZERO \t\t\tdders[id].r\n      PUSH [tag] 50\t\t\tdders[id].r\n      JUMPI \t\t\tdders[id].r\n      INVALID \t\t\tdders[id].r\n    tag 50\t\t\tdders[id].r\n      JUMPDEST \t\t\tdders[id].r\n      PUSH 3\t\t\tdders[id].r\n      MUL \t\t\tdders[id].r\n      ADD \t\t\tdders[id].r\n      PUSH 0\t\t\tdders[id].remainingTokens,b\n      ADD \t\t\tdders[id].remainingTokens,b\n      SLOAD \t\t\tdders[id].remainingTokens,b\n      PUSH 1\t\t\tdders[i\n      DUP6 \t\t\t].\n      PUSH 4\t\t\tdders[id].p\n      DUP2 \t\t\tdders[id].p\n      LT \t\t\tdders[id].p\n      ISZERO \t\t\tdders[id].p\n      ISZERO \t\t\tdders[id].p\n      PUSH [tag] 52\t\t\tdders[id].p\n      JUMPI \t\t\tdders[id].p\n      INVALID \t\t\tdders[id].p\n    tag 52\t\t\tdders[id].p\n      JUMPDEST \t\t\tdders[id].p\n      PUSH 3\t\t\tdders[id].p\n      MUL \t\t\tdders[id].p\n      ADD \t\t\tdders[id].p\n      PUSH 1\t\t\tdders[id].personId,b\n      ADD \t\t\tdders[id].personId,b\n      SLOAD \t\t\tdders[id].personId,b\n      PUSH 1\t\t\tdders[i\n      DUP7 \t\t\t].\n      PUSH 4\t\t\tdders[id].a\n      DUP2 \t\t\tdders[id].a\n      LT \t\t\tdders[id].a\n      ISZERO \t\t\tdders[id].a\n      ISZERO \t\t\tdders[id].a\n      PUSH [tag] 54\t\t\tdders[id].a\n      JUMPI \t\t\tdders[id].a\n      INVALID \t\t\tdders[id].a\n    tag 54\t\t\tdders[id].a\n      JUMPDEST \t\t\tdders[id].a\n      PUSH 3\t\t\tdders[id].a\n      MUL \t\t\tdders[id].a\n      ADD \t\t\tdders[id].a\n      PUSH 2\t\t\tdders[id].addr);\n      ADD \t\t\tdders[id].addr);\n      PUSH 0\t\t\tdders[id].addr);\n      SWAP1 \t\t\tdders[id].addr);\n      SLOAD \t\t\tdders[id].addr);\n      SWAP1 \t\t\tdders[id].addr);\n      PUSH 100\t\t\tdders[id].addr);\n      EXP \t\t\tdders[id].addr);\n      SWAP1 \t\t\tdders[id].addr);\n      DIV \t\t\tdders[id].addr);\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tdders[id].addr);\n      AND \t\t\tdders[id].addr);\n      SWAP3 \t\t\tturn (bidders[id].remainingTok...\n      POP \t\t\tturn (bidders[id].remainingTok...\n      SWAP3 \t\t\tturn (bidders[id].remainingTok...\n      POP \t\t\tturn (bidders[id].remainingTok...\n      SWAP3 \t\t\tturn (bidders[id].remainingTok...\n      POP \t\t\tturn (bidders[id].remainingTok...\n      SWAP2 \t\t\tnction getPersonDetails(uint i...\n      SWAP4 \t\t\tnction getPersonDetails(uint i...\n      SWAP1 \t\t\tnction getPersonDetails(uint i...\n      SWAP3 \t\t\tnction getPersonDetails(uint i...\n      POP \t\t\tnction getPersonDetails(uint i...\n      JUMP [out]\t\t\tnction getPersonDetails(uint i...\n    tag 21\t\t\tnction revealWinners() public ...\n      JUMPDEST \t\t\tnction revealWinners() public ...\n      PUSH 0\t\t\tnt id =\n      DUP1 \t\t\tem storage currentItem=i\n      PUSH 0\t\t\tnt randomIndex =\n      DUP1 \t\t\tnt winnerId =\n      PUSH 0\t\t\t \n      SWAP4 \t\t\tnt id = 0; \n      POP \t\t\tnt id = 0; \n    tag 58\t\t\tr (uint id = 0; id < 3; id++) ...\n      JUMPDEST \t\t\tr (uint id = 0; id < 3; id++) ...\n      PUSH 3\t\t\t \n      DUP5 \t\t\t <\n      LT \t\t\t < 3; \n      ISZERO \t\t\tr (uint id = 0; id < 3; id++) ...\n      PUSH [tag] 59\t\t\tr (uint id = 0; id < 3; id++) ...\n      JUMPI \t\t\tr (uint id = 0; id < 3; id++) ...\n      PUSH D\t\t\tems[i\n      DUP5 \t\t\t];\n      PUSH 3\t\t\tems[id];\\r\n      DUP2 \t\t\tems[id];\\r\n      LT \t\t\tems[id];\\r\n      ISZERO \t\t\tems[id];\\r\n      ISZERO \t\t\tems[id];\\r\n      PUSH [tag] 61\t\t\tems[id];\\r\n      JUMPI \t\t\tems[id];\\r\n      INVALID \t\t\tems[id];\\r\n    tag 61\t\t\tems[id];\\r\n      JUMPDEST \t\t\tems[id];\\r\n      PUSH 2\t\t\tems[id];\\r\n      MUL \t\t\tems[id];\\r\n      ADD \t\t\tems[id];\\r\n      SWAP3 \t\t\tem storage currentItem=items[i...\n      POP \t\t\tem storage currentItem=items[i...\n      PUSH 0\t\t\t{\n      DUP4 \t\t\trrentItem.i\n      PUSH 1\t\t\trrentItem.itemTokens.l\n      ADD \t\t\trrentItem.itemTokens.l\n      DUP1 \t\t\trrentItem.itemTokens.length !\n      SLOAD \t\t\trrentItem.itemTokens.length !\n      SWAP1 \t\t\trrentItem.itemTokens.length !\n      POP \t\t\trrentItem.itemTokens.length !\n      EQ \t\t\trrentItem.itemTokens.length !=...\n      ISZERO \t\t\trrentItem.itemTokens.length !=...\n      ISZERO \t\t\t(currentItem.itemTokens.length...\n      PUSH [tag] 63\t\t\t(currentItem.itemTokens.length...\n      JUMPI \t\t\t(currentItem.itemTokens.length...\n      DUP3 \t\t\trrentItem.i\n      PUSH 1\t\t\trrentItem.itemTokens.l\n      ADD \t\t\trrentItem.itemTokens.l\n      DUP1 \t\t\trrentItem.itemTokens.length; \n      SLOAD \t\t\trrentItem.itemTokens.length; \n      SWAP1 \t\t\trrentItem.itemTokens.length; \n      POP \t\t\trrentItem.itemTokens.length; \n      DUP4 \t\t\trrentItem.i\n      PUSH 1\t\t\trrentItem.itemTokens.l\n      ADD \t\t\trrentItem.itemTokens.l\n      DUP1 \t\t\trrentItem.itemTokens.length)%\n      SLOAD \t\t\trrentItem.itemTokens.length)%\n      SWAP1 \t\t\trrentItem.itemTokens.length)%\n      POP \t\t\trrentItem.itemTokens.length)%\n      NUMBER \t\t\tock.number /\n      DUP2 \t\t\tock.number / currentItem.itemT...\n      ISZERO \t\t\tock.number / currentItem.itemT...\n      ISZERO \t\t\tock.number / currentItem.itemT...\n      PUSH [tag] 64\t\t\tock.number / currentItem.itemT...\n      JUMPI \t\t\tock.number / currentItem.itemT...\n      INVALID \t\t\tock.number / currentItem.itemT...\n    tag 64\t\t\tock.number / currentItem.itemT...\n      JUMPDEST \t\t\tock.number / currentItem.itemT...\n      DIV \t\t\tock.number / currentItem.itemT...\n      DUP2 \t\t\tlock.number / currentItem.item...\n      ISZERO \t\t\tlock.number / currentItem.item...\n      ISZERO \t\t\tlock.number / currentItem.item...\n      PUSH [tag] 65\t\t\tlock.number / currentItem.item...\n      JUMPI \t\t\tlock.number / currentItem.item...\n      INVALID \t\t\tlock.number / currentItem.item...\n    tag 65\t\t\tlock.number / currentItem.item...\n      JUMPDEST \t\t\tlock.number / currentItem.item...\n      MOD \t\t\tlock.number / currentItem.item...\n      SWAP2 \t\t\tnt randomIndex = (block.number...\n      POP \t\t\tnt randomIndex = (block.number...\n      DUP3 \t\t\trrentItem.i\n      PUSH 1\t\t\trrentItem.itemTokens[r\n      ADD \t\t\trrentItem.itemTokens[r\n      DUP3 \t\t\tndomIndex];\n      DUP2 \t\t\trrentItem.itemTokens[randomInd...\n      SLOAD \t\t\trrentItem.itemTokens[randomInd...\n      DUP2 \t\t\trrentItem.itemTokens[randomInd...\n      LT \t\t\trrentItem.itemTokens[randomInd...\n      ISZERO \t\t\trrentItem.itemTokens[randomInd...\n      ISZERO \t\t\trrentItem.itemTokens[randomInd...\n      PUSH [tag] 66\t\t\trrentItem.itemTokens[randomInd...\n      JUMPI \t\t\trrentItem.itemTokens[randomInd...\n      INVALID \t\t\trrentItem.itemTokens[randomInd...\n    tag 66\t\t\trrentItem.itemTokens[randomInd...\n      JUMPDEST \t\t\trrentItem.itemTokens[randomInd...\n      SWAP1 \t\t\trrentItem.itemTokens[randomInd...\n      PUSH 0\t\t\trrentItem.itemTokens[randomInd...\n      MSTORE \t\t\trrentItem.itemTokens[randomInd...\n      PUSH 20\t\t\trrentItem.itemTokens[randomInd...\n      PUSH 0\t\t\trrentItem.itemTokens[randomInd...\n      KECCAK256 \t\t\trrentItem.itemTokens[randomInd...\n      ADD \t\t\trrentItem.itemTokens[randomInd...\n      SLOAD \t\t\trrentItem.itemTokens[randomInd...\n      SWAP1 \t\t\tnt winnerId = currentItem.item...\n      POP \t\t\tnt winnerId = currentItem.item...\n      PUSH 1\t\t\tdders[w\n      DUP2 \t\t\tnnerId].\n      PUSH 4\t\t\tdders[winnerId].a\n      DUP2 \t\t\tdders[winnerId].a\n      LT \t\t\tdders[winnerId].a\n      ISZERO \t\t\tdders[winnerId].a\n      ISZERO \t\t\tdders[winnerId].a\n      PUSH [tag] 68\t\t\tdders[winnerId].a\n      JUMPI \t\t\tdders[winnerId].a\n      INVALID \t\t\tdders[winnerId].a\n    tag 68\t\t\tdders[winnerId].a\n      JUMPDEST \t\t\tdders[winnerId].a\n      PUSH 3\t\t\tdders[winnerId].a\n      MUL \t\t\tdders[winnerId].a\n      ADD \t\t\tdders[winnerId].a\n      PUSH 2\t\t\tdders[winnerId].addr; \n      ADD \t\t\tdders[winnerId].addr; \n      PUSH 0\t\t\tdders[winnerId].addr; \n      SWAP1 \t\t\tdders[winnerId].addr; \n      SLOAD \t\t\tdders[winnerId].addr; \n      SWAP1 \t\t\tdders[winnerId].addr; \n      PUSH 100\t\t\tdders[winnerId].addr; \n      EXP \t\t\tdders[winnerId].addr; \n      SWAP1 \t\t\tdders[winnerId].addr; \n      DIV \t\t\tdders[winnerId].addr; \n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tdders[winnerId].addr; \n      AND \t\t\tdders[winnerId].addr; \n      PUSH 13\t\t\tnners[i\n      DUP6 \t\t\t] \n      PUSH 3\t\t\tnners[id] =\n      DUP2 \t\t\tnners[id] =\n      LT \t\t\tnners[id] =\n      ISZERO \t\t\tnners[id] =\n      ISZERO \t\t\tnners[id] =\n      PUSH [tag] 70\t\t\tnners[id] =\n      JUMPI \t\t\tnners[id] =\n      INVALID \t\t\tnners[id] =\n    tag 70\t\t\tnners[id] =\n      JUMPDEST \t\t\tnners[id] =\n      ADD \t\t\tnners[id] =\n      PUSH 0\t\t\tnners[id] =\n      PUSH 100\t\t\tnners[id] = bidders[winnerId]....\n      EXP \t\t\tnners[id] = bidders[winnerId]....\n      DUP2 \t\t\tnners[id] = bidders[winnerId]....\n      SLOAD \t\t\tnners[id] = bidders[winnerId]....\n      DUP2 \t\t\tnners[id] = bidders[winnerId]....\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tnners[id] = bidders[winnerId]....\n      MUL \t\t\tnners[id] = bidders[winnerId]....\n      NOT \t\t\tnners[id] = bidders[winnerId]....\n      AND \t\t\tnners[id] = bidders[winnerId]....\n      SWAP1 \t\t\tnners[id] = bidders[winnerId]....\n      DUP4 \t\t\tnners[id] = bidders[winnerId]....\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tnners[id] = bidders[winnerId]....\n      AND \t\t\tnners[id] = bidders[winnerId]....\n      MUL \t\t\tnners[id] = bidders[winnerId]....\n      OR \t\t\tnners[id] = bidders[winnerId]....\n      SWAP1 \t\t\tnners[id] = bidders[winnerId]....\n      SSTORE \t\t\tnners[id] = bidders[winnerId]....\n      POP \t\t\tnners[id] = bidders[winnerId]....\n    tag 63\t\t\t(currentItem.itemTokens.length...\n      JUMPDEST \t\t\t(currentItem.itemTokens.length...\n      DUP4 \t\t\t++) \n      DUP1 \t\t\t++) \n      PUSH 1\t\t\t++) \n      ADD \t\t\t++) \n      SWAP5 \t\t\t++) \n      POP \t\t\t++) \n      POP \t\t\t++) \n      PUSH [tag] 58\t\t\tr (uint id = 0; id < 3; id++) ...\n      JUMP \t\t\tr (uint id = 0; id < 3; id++) ...\n    tag 59\t\t\tr (uint id = 0; id < 3; id++) ...\n      JUMPDEST \t\t\tr (uint id = 0; id < 3; id++) ...\n      CALLER \t\t\tg.sender);\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tneficiary == msg.sender);\n      AND \t\t\tneficiary == msg.sender);\n      PUSH 16\t\t\tneficiary =\n      PUSH 0\t\t\tneficiary =\n      SWAP1 \t\t\tneficiary =\n      SLOAD \t\t\tneficiary =\n      SWAP1 \t\t\tneficiary =\n      PUSH 100\t\t\tneficiary =\n      EXP \t\t\tneficiary =\n      SWAP1 \t\t\tneficiary =\n      DIV \t\t\tneficiary =\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tneficiary =\n      AND \t\t\tneficiary =\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tneficiary == msg.sender);\n      AND \t\t\tneficiary == msg.sender);\n      EQ \t\t\tneficiary == msg.sender);\n      ISZERO \t\t\tquire(beneficiary == msg.sende...\n      ISZERO \t\t\tquire(beneficiary == msg.sende...\n      PUSH [tag] 72\t\t\tquire(beneficiary == msg.sende...\n      JUMPI \t\t\tquire(beneficiary == msg.sende...\n      PUSH 0\t\t\tquire(beneficiary == msg.sende...\n      DUP1 \t\t\tquire(beneficiary == msg.sende...\n      REVERT \t\t\tquire(beneficiary == msg.sende...\n    tag 72\t\t\tquire(beneficiary == msg.sende...\n      JUMPDEST \t\t\tquire(beneficiary == msg.sende...\n      POP \t\t\tnction revealWinners() public ...\n      POP \t\t\tnction revealWinners() public ...\n      POP \t\t\tnction revealWinners() public ...\n      POP \t\t\tnction revealWinners() public ...\n      JUMP [out]\t\t\tnction revealWinners() public ...\n    tag 24\t\t\taddress[3] public winners\n      JUMPDEST \t\t\taddress[3] public winners\n      PUSH 13\t\t\taddress[3] public winners\n      DUP2 \t\t\taddress[3] public winners\n      PUSH 3\t\t\taddress[3] public winners\n      DUP2 \t\t\taddress[3] public winners\n      LT \t\t\taddress[3] public winners\n      ISZERO \t\t\taddress[3] public winners\n      ISZERO \t\t\taddress[3] public winners\n      PUSH [tag] 73\t\t\taddress[3] public winners\n      JUMPI \t\t\taddress[3] public winners\n      INVALID \t\t\taddress[3] public winners\n    tag 73\t\t\taddress[3] public winners\n      JUMPDEST \t\t\taddress[3] public winners\n      ADD \t\t\taddress[3] public winners\n      PUSH 0\t\t\taddress[3] public winners\n      SWAP2 \t\t\taddress[3] public winners\n      POP \t\t\taddress[3] public winners\n      SLOAD \t\t\taddress[3] public winners\n      SWAP1 \t\t\taddress[3] public winners\n      PUSH 100\t\t\taddress[3] public winners\n      EXP \t\t\taddress[3] public winners\n      SWAP1 \t\t\taddress[3] public winners\n      DIV \t\t\taddress[3] public winners\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\taddress[3] public winners\n      AND \t\t\taddress[3] public winners\n      DUP2 \t\t\taddress[3] public winners\n      JUMP [out]\t\t\taddress[3] public winners\n    tag 27\t\t\tItem [3] public items\n      JUMPDEST \t\t\tItem [3] public items\n      PUSH D\t\t\tItem [3] public items\n      DUP2 \t\t\tItem [3] public items\n      PUSH 3\t\t\tItem [3] public items\n      DUP2 \t\t\tItem [3] public items\n      LT \t\t\tItem [3] public items\n      ISZERO \t\t\tItem [3] public items\n      ISZERO \t\t\tItem [3] public items\n      PUSH [tag] 75\t\t\tItem [3] public items\n      JUMPI \t\t\tItem [3] public items\n      INVALID \t\t\tItem [3] public items\n    tag 75\t\t\tItem [3] public items\n      JUMPDEST \t\t\tItem [3] public items\n      PUSH 2\t\t\tItem [3] public items\n      MUL \t\t\tItem [3] public items\n      ADD \t\t\tItem [3] public items\n      PUSH 0\t\t\tItem [3] public items\n      SWAP2 \t\t\tItem [3] public items\n      POP \t\t\tItem [3] public items\n      SWAP1 \t\t\tItem [3] public items\n      POP \t\t\tItem [3] public items\n      DUP1 \t\t\tItem [3] public items\n      PUSH 0\t\t\tItem [3] public items\n      ADD \t\t\tItem [3] public items\n      SLOAD \t\t\tItem [3] public items\n      SWAP1 \t\t\tItem [3] public items\n      POP \t\t\tItem [3] public items\n      DUP2 \t\t\tItem [3] public items\n      JUMP [out]\t\t\tItem [3] public items\n    .data\n"
}